{"mappings":"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","sources":["lib/helpers.ts","node_modules/.pnpm/solid-js@0.26.5/node_modules/solid-js/dist/solid.js","node_modules/.pnpm/solid-js@0.26.5/node_modules/solid-js/web/dist/web.js","node_modules/.pnpm/solid-simple-table@0.2.6/node_modules/solid-simple-table/dist/SimpleTable.module.js","lib/panel/component.tsx","lib/panel/dock.tsx","lib/status-bar/helpers.ts","lib/tooltip/message.tsx","node_modules/.pnpm/atom-ide-base@3.1.1/node_modules/atom-ide-base/src-commons-ui/float-pane/selectable-overlay.ts","lib/tooltip/index.tsx","node_modules/.pnpm/atom-ide-base@3.1.1/node_modules/atom-ide-base/src-commons-atom/editor-largeness.ts","lib/tree-view/index.ts","lib/index.ts","lib/panel/delegate.ts","lib/panel/index.ts","lib/commands.ts","lib/status-bar/element.ts","lib/status-bar/index.ts","lib/busy-signal.ts","lib/intentions.ts","lib/tooltip/delegate.ts","node_modules/.pnpm/@parcel+runtime-js@2.0.0-nightly.731/node_modules/@parcel/runtime-js/lib/runtime-9e33eaca0f4bde53.js","lib/editor/index.ts","lib/editor/helpers.ts","lib/editors.ts","lib/tree-view/helpers.ts","lib/main.ts"],"sourcesContent":["import { Range } from 'atom';\nconst {\n  workspace,\n  project,\n  clipboard\n} = atom;\nimport type { Point, PointLike, RangeCompatible, TextEditor, WorkspaceOpenOptions } from 'atom';\nimport { shell } from 'electron';\nimport type { default as Editors, EditorsMap } from './editors';\nimport type { LinterMessage, MessageSolution } from './types';\nexport const severityScore = {\n  error: 3,\n  warning: 2,\n  info: 1\n};\nexport const severityNames = {\n  error: 'Error',\n  warning: 'Warning',\n  info: 'Info'\n};\nexport const WORKSPACE_URI = 'atom://linter-ui-default';\nexport const DOCK_ALLOWED_LOCATIONS = ['center', 'bottom'];\nexport const DOCK_DEFAULT_LOCATION = 'bottom';\nexport function $range(message: LinterMessage): Range | null | undefined {\n  return message.location.position;\n}\nexport function $file(message: LinterMessage): string | null | undefined {\n  return message.location.file;\n}\nexport function copySelection() {\n  const selection = getSelection();\n\n  if (selection) {\n    clipboard.write(selection.toString());\n  }\n}\nexport function getPathOfMessage(message: LinterMessage): string {\n  return project.relativizePath($file(message) ?? '')[1];\n}\nexport function getEditorsMap(editors: Editors): {\n  editorsMap: EditorsMap;\n  filePaths: Array<string>;\n} {\n  // TODO types\n  const editorsMap: EditorsMap = new Map();\n  const filePaths: string[] = [];\n\n  for (const entry of editors.editors) {\n    const filePath = entry.textEditor.getPath() ?? ''; // if undefined save it as \"\"\n\n    if (editorsMap.has(filePath)) {\n      editorsMap.get(filePath)!.editors.push(entry);\n    } else {\n      editorsMap.set(filePath, {\n        added: [],\n        removed: [],\n        editors: [entry]\n      });\n      filePaths.push(filePath);\n    }\n  }\n\n  return {\n    editorsMap,\n    filePaths\n  };\n}\nexport function filterMessages(messages: Array<LinterMessage>, filePath: string | null | undefined, severity: string | null | undefined = null): Array<LinterMessage> {\n  const filtered: Array<LinterMessage> = [];\n  messages.forEach(function (message) {\n    if (!message || !message.location) {\n      return;\n    }\n\n    if ((!filePath || $file(message) === filePath) && (!severity || message.severity === severity)) {\n      filtered.push(message);\n    }\n  });\n  return filtered;\n}\nexport function filterMessagesByRangeOrPoint(messages: Set<LinterMessage> | Array<LinterMessage> | Map<string, LinterMessage>, filePath: string | undefined, rangeOrPoint: Point | RangeCompatible): Array<LinterMessage> {\n  const filtered: Array<LinterMessage> = [];\n  const expectedRange = rangeOrPoint.constructor.name === 'Point' ? new Range((rangeOrPoint as Point), (rangeOrPoint as Point)) : Range.fromObject((rangeOrPoint as RangeCompatible));\n  messages.forEach(function (message: LinterMessage) {\n    const file = $file(message);\n    const range = $range(message);\n\n    if (typeof file === 'string' && range && file === filePath && typeof range.intersectsWith === 'function' && range.intersectsWith(expectedRange)) {\n      filtered.push(message);\n    }\n  });\n  return filtered;\n}\nexport async function openFile(file: string, position: PointLike | null | undefined) {\n  const options: WorkspaceOpenOptions = {\n    searchAllPanes: true\n  };\n\n  if (position) {\n    options.initialLine = position.row;\n    options.initialColumn = position.column;\n  }\n\n  await workspace.open(file, options);\n}\nexport async function visitMessage(message: LinterMessage, reference = false) {\n  let messageFile: string | undefined | null;\n  let messagePosition: Point | undefined;\n\n  if (reference) {\n    if (!message.reference || !message.reference.file) {\n      console.warn('[Linter-UI-Default] Message does not have a valid reference. Ignoring');\n      return;\n    }\n\n    messageFile = message.reference.file;\n    messagePosition = message.reference.position;\n  } else {\n    const messageRange = $range(message);\n    messageFile = $file(message);\n\n    if (messageRange) {\n      messagePosition = messageRange.start;\n    }\n  }\n\n  if (typeof messageFile === 'string') {\n    await openFile(messageFile, messagePosition);\n  }\n}\nexport function openExternally(message: LinterMessage) {\n  if (message.version === 2 && message.url !== undefined) {\n    shell.openExternal(message.url);\n  }\n}\nexport function sortMessages(rows: Array<LinterMessage>, sortDirection: [id: 'severity' | 'linterName' | 'file' | 'line', direction: 'asc' | 'desc']): Array<LinterMessage> {\n  const sortDirectionID = sortDirection[0];\n  const sortDirectionDirection = sortDirection[1];\n  const multiplyWith = sortDirectionDirection === 'asc' ? 1 : -1;\n  return rows.sort(function (a, b) {\n    if (sortDirectionID === 'severity') {\n      const severityA = severityScore[a.severity];\n      const severityB = severityScore[b.severity];\n\n      if (severityA !== severityB) {\n        return multiplyWith * (severityA > severityB ? 1 : -1);\n      }\n    }\n\n    if (sortDirectionID === 'linterName') {\n      const sortValue = a.severity.localeCompare(b.severity);\n\n      if (sortValue !== 0) {\n        return multiplyWith * sortValue;\n      }\n    }\n\n    if (sortDirectionID === 'file') {\n      const fileA = getPathOfMessage(a);\n      const fileALength = fileA.length;\n      const fileB = getPathOfMessage(b);\n      const fileBLength = fileB.length;\n\n      if (fileALength !== fileBLength) {\n        return multiplyWith * (fileALength > fileBLength ? 1 : -1);\n      } else if (fileA !== fileB) {\n        return multiplyWith * fileA.localeCompare(fileB);\n      }\n    }\n\n    if (sortDirectionID === 'line') {\n      const rangeA = $range(a);\n      const rangeB = $range(b);\n\n      if (rangeA && !rangeB) {\n        return 1;\n      } else if (rangeB && !rangeA) {\n        return -1;\n      } else if (rangeA && rangeB) {\n        if (rangeA.start.row !== rangeB.start.row) {\n          return multiplyWith * (rangeA.start.row > rangeB.start.row ? 1 : -1);\n        }\n\n        if (rangeA.start.column !== rangeB.start.column) {\n          return multiplyWith * (rangeA.start.column > rangeB.start.column ? 1 : -1);\n        }\n      }\n    }\n\n    return 0;\n  });\n}\nexport function sortSolutions(solutions: MessageSolution[]) {\n  return solutions.sort(function (a, b) {\n    if (a.priority === undefined || b.priority === undefined) {\n      return 0;\n    }\n\n    return b.priority - a.priority;\n  });\n}\nexport function applySolution(textEditor: TextEditor, solution: MessageSolution): boolean {\n  if ('apply' in solution) {\n    solution.apply();\n    return true;\n  }\n\n  const range = solution.position;\n  const replaceWith = solution.replaceWith;\n\n  if ('currentText' in solution) {\n    const currentText = solution.currentText;\n    const textInRange = textEditor.getTextInBufferRange(range);\n\n    if (currentText !== textInRange) {\n      console.warn('[linter-ui-default] Not applying fix because text did not match the expected one', 'expected', currentText, 'but got', textInRange);\n      return false;\n    }\n  }\n\n  textEditor.setTextInBufferRange(range, replaceWith);\n  return true;\n}\n/**\n * A function to get a value from the cache or calculate it if it is not available (and store it in the cache after calculation)\n *\n * @param map A reference to a Map of key to values that is used as the cache\n * @param key The current key to get calculate or get the cache for\n * @param calculate The function that is used to calculate the value if the cache is not hit\n */\n\nexport function get<Key, Value>(map: Map<Key, Value>, key: Key, calculate: () => Value | null): Value | null {\n  // get cache\n  const cachedValue = map.get(key);\n\n  if (cachedValue !== undefined) {\n    // cache hit\n    return cachedValue;\n  } else {\n    // calculate\n    const calculatedValue = calculate();\n\n    if (calculatedValue !== null) {\n      // calculation successful\n      map.set(key, calculatedValue);\n    }\n\n    return calculatedValue;\n  }\n}\n/** A faster vresion of lodash.debounce */\n\n/* eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any */\n\nexport function debounce<T extends (...args: any[]) => void>(func: T, wait?: number): T {\n  let timeoutId: NodeJS.Timeout | undefined; // @ts-ignore\n\n  return (...args: Parameters<T>) => {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      func(...args);\n    }, wait);\n  };\n}\n/** A faster vresion of lodash.once */\n\n/* eslint-disable-next-line @typescript-eslint/ban-types */\n\nexport function once<T extends Function>(func: T): T {\n  let result: any;\n  let called = false; // @ts-ignore\n\n  return (...args: Parameters<T>) => {\n    if (!called) {\n      result = func(...args);\n      called = true;\n    }\n\n    return result;\n  };\n}","let taskIdCounter = 1,\n    isCallbackScheduled = false,\n    isPerformingWork = false,\n    taskQueue = [],\n    currentTask = null,\n    shouldYieldToHost = null,\n    yieldInterval = 5,\n    deadline = 0,\n    maxYieldInterval = 300,\n    scheduleCallback = null,\n    scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n        port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      let k = n + m >> 1;\n      let cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n      timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return { ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}.`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nlet ERROR = null;\nlet runEffects = runQueue;\nconst NOTPENDING = {};\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst [transPending, setTransPending] = createSignal(false);\nvar Owner = null;\nvar Listener = null;\nlet Pending = null;\nlet Updates = null;\nlet Effects = null;\nlet Transition = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  detachedOwner && (Owner = detachedOwner);\n  const listener = Listener,\n        owner = Owner,\n        root = fn.length === 0 && !false ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner,\n    attached: !!detachedOwner\n  };\n  Owner = root;\n  Listener = null;\n  let result;\n  try {\n    runUpdates(() => result = fn(() => cleanNode(root)), true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  return result;\n}\nfunction createSignal(value, areEqual = true, options) {\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    pending: NOTPENDING,\n    comparator: areEqual ? typeof areEqual === \"function\" ? areEqual : equalFn : undefined\n  };\n  return [readSignal.bind(s), writeSignal.bind(s)];\n}\nfunction createComputed(fn, value) {\n  updateComputation(createComputation(fn, value, true));\n}\nfunction createRenderEffect(fn, value) {\n  updateComputation(createComputation(fn, value, false));\n}\nfunction createEffect(fn, value) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  Effects && Effects.push(c);\n}\nfunction resumeEffects(e) {\n  Transition && (Transition.running = true);\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createMemo(fn, value, areEqual = true) {\n  const c = createComputation(fn, value, true);\n  c.pending = NOTPENDING;\n  c.observers = null;\n  c.observerSlots = null;\n  c.state = 0;\n  c.comparator = areEqual ? typeof areEqual === \"function\" ? areEqual : equalFn : undefined;\n  updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createDeferred(source, options) {\n  let t,\n      timeout = options ? options.timeoutMs : undefined;\n  const [deferred, setDeferred] = createSignal();\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  updateComputation(node);\n  setDeferred(node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn) {\n  let subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const key of subs.keys()) if (fn(key, v) || p !== undefined && fn(key, p)) {\n      const l = subs.get(key);\n      for (const c of l.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true);\n  updateComputation(node);\n  return key => {\n    let listener;\n    if (listener = Listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.size > 1 ? l.delete(listener) : subs.delete(key);\n      });\n    }\n    return fn(key, node.value);\n  };\n}\nfunction batch(fn) {\n  if (Pending) return fn();\n  const q = Pending = [],\n        result = fn();\n  Pending = null;\n  runUpdates(() => {\n    for (let i = 0; i < q.length; i += 1) {\n      const data = q[i];\n      if (data.pending !== NOTPENDING) {\n        const pending = data.pending;\n        data.pending = NOTPENDING;\n        writeSignal.call(data, pending);\n      }\n    }\n  }, false);\n  return result;\n}\nfunction useTransition() {\n  return [transPending, (fn, cb) => {\n    if (SuspenseContext) {\n      Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        running: true,\n        cb: []\n      });\n      cb && Transition.cb.push(cb);\n      Transition.running = true;\n    }\n    batch(fn);\n    if (!SuspenseContext && cb) cb();\n  }];\n}\nfunction untrack(fn) {\n  let result,\n      listener = Listener;\n  Listener = null;\n  result = fn();\n  Listener = listener;\n  return result;\n}\nfunction on(...args) {\n  const fn = args.pop();\n  let deps;\n  let isArray = true;\n  let prev;\n  if (args.length < 2) {\n    deps = args[0];\n    isArray = false;\n  } else deps = args;\n  return prevResult => {\n    let value;\n    if (isArray) {\n      value = [];\n      if (!prev) prev = [];\n      for (let i = 0; i < deps.length; i++) value.push(deps[i]());\n    } else value = deps();\n    const result = untrack(() => fn(value, prev, prevResult));\n    prev = value;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  Owner = o;\n  try {\n    return fn();\n  } finally {\n    Owner = prev;\n  }\n}\nfunction createContext(defaultValue) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  return lookup(Owner, context.id) || context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  return createMemo(() => resolveChildren(children()));\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction createResource(fn, fetcher, options = {}) {\n  if (arguments.length === 2) {\n    if (typeof fetcher === \"object\") {\n      options = fetcher;\n      fetcher = fn;\n      fn = true;\n    }\n  } else if (arguments.length === 1) {\n    fetcher = fn;\n    fn = true;\n  }\n  const contexts = new Set(),\n        [s, set] = createSignal(options.initialValue),\n        [track, trigger] = createSignal(undefined, false),\n        [loading, setLoading] = createSignal(false),\n        [error, setError] = createSignal();\n  let err = undefined,\n      pr = null,\n      initP = null,\n      id = null,\n      loadedUnderTransition = false,\n      dynamic = typeof fn === \"function\";\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    if (sharedConfig.context.loadResource) {\n      initP = sharedConfig.context.loadResource(id);\n    } else if (sharedConfig.resources && id && id in sharedConfig.resources) {\n      initP = sharedConfig.resources[id];\n      delete sharedConfig.resources[id];\n    }\n  }\n  function loadEnd(p, v, e) {\n    if (pr === p) {\n      setError(err = e);\n      pr = null;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          if (!Transition.promises.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n          completeLoad(v);\n        }, false);\n      } else completeLoad(v);\n    }\n    return v;\n  }\n  function completeLoad(v) {\n    batch(() => {\n      set(v);\n      setLoading(false);\n      for (let c of contexts.keys()) c.decrement();\n      contexts.clear();\n    });\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n          v = s();\n    if (err) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load() {\n    setError(err = undefined);\n    let lookup = dynamic ? fn() : fn;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(s));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP || fetcher(lookup, s);\n    initP = null;\n    if (typeof p !== \"object\" || !(\"then\" in p)) {\n      loadEnd(pr, p);\n      return;\n    }\n    pr = p;\n    batch(() => {\n      setLoading(true);\n      trigger();\n    });\n    p.then(v => loadEnd(p, v), e => loadEnd(p, e, e));\n  }\n  Object.defineProperties(read, {\n    loading: {\n      get() {\n        return loading();\n      }\n    },\n    error: {\n      get() {\n        return error();\n      }\n    }\n  });\n  if (dynamic) createComputed(load);else load();\n  return [read, {\n    refetch: load,\n    mutate: set\n  }];\n}\nfunction readSignal() {\n  if (this.state && this.sources) {\n    const updates = Updates;\n    Updates = null;\n    this.state === STALE ? updateComputation(this) : lookDownstream(this);\n    Updates = updates;\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (Transition && Transition.running && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(value, isComp) {\n  if (this.comparator) {\n    if (Transition && Transition.running && Transition.sources.has(this)) {\n      if (this.comparator(this.tValue, value)) return value;\n    } else if (this.comparator(this.value, value)) return value;\n  }\n  if (Pending) {\n    if (this.pending === NOTPENDING) Pending.push(this);\n    this.pending = value;\n    return value;\n  }\n  if (Transition) {\n    if (Transition.running || !isComp && Transition.sources.has(this)) {\n      Transition.sources.add(this);\n      this.tValue = value;\n    }\n    if (!Transition.running) this.value = value;\n  } else this.value = value;\n  if (this.observers && (!Updates || this.observers.length)) {\n    runUpdates(() => {\n      for (let i = 0; i < this.observers.length; i += 1) {\n        const o = this.observers[i];\n        if (Transition && Transition.running && Transition.disposed.has(o)) continue;\n        if (o.observers && o.state !== PENDING) markUpstream(o);\n        o.state = STALE;\n        if (o.pure) Updates.push(o);else Effects.push(o);\n      }\n      if (Updates.length > 10e5) {\n        Updates = [];\n        throw new Error(\"Potential Infinite Loop Detected.\");\n      }\n    }, false);\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n        listener = Listener,\n        time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    Transition.running = true;\n    runComputation(node, node.tValue, time);\n    Transition.running = false;\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.observers && node.observers.length) {\n      writeSignal.call(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure) {\n  const c = {\n    fn,\n    state: STALE,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  return c;\n}\nfunction runTop(node) {\n  let top = node.state === STALE && node,\n      pending;\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const runningTransition = Transition && Transition.running;\n  while ((node.fn || runningTransition && node.attached) && (node = node.owner)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (node.state === PENDING) pending = node;else if (node.state === STALE) {\n      top = node;\n      pending = undefined;\n    }\n  }\n  if (pending) {\n    const updates = Updates;\n    Updates = null;\n    lookDownstream(pending);\n    Updates = updates;\n    if (!top || top.state !== STALE) return;\n    if (runningTransition) {\n      node = top;\n      while ((node.fn || node.attached) && (node = node.owner)) {\n        if (Transition.disposed.has(node)) return;\n      }\n    }\n  }\n  top && updateComputation(top);\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    completeUpdates(wait);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let cbs;\n  if (Transition && Transition.running) {\n    if (Transition.promises.size) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n    const sources = Transition.sources;\n    cbs = Transition.cb;\n    Transition = null;\n    batch(() => {\n      sources.forEach(v => {\n        v.value = v.tValue;\n        if (v.owned) {\n          for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n        }\n        if (v.tOwned) v.owned = v.tOwned;\n        delete v.tValue;\n        delete v.tOwned;\n      });\n      setTransPending(false);\n    });\n  }\n  if (Effects.length) batch(() => {\n    runEffects(Effects);\n    Effects = null;\n  });else {\n    Effects = null;\n  }\n  if (cbs) cbs.forEach(cb => cb());\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction runUserEffects(queue) {\n  let i,\n      userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  const resume = queue.length;\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n  for (i = resume; i < queue.length; i++) runTop(queue[i]);\n}\nfunction lookDownstream(node) {\n  node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      if (source.state === STALE) runTop(source);else if (source.state === PENDING) lookDownstream(source);\n    }\n  }\n}\nfunction markUpstream(node) {\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (!o.state) {\n      o.state = PENDING;\n      o.observers && markUpstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n            index = node.sourceSlots.pop(),\n            obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n              s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = 0; i < node.tOwned.length; i++) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = 0; i < node.owned.length; i++) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = 0; i < node.cleanups.length; i++) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  node.state = 0;\n  node.context = null;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.state = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction handleError(err) {\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  fns.forEach(f => f(err));\n}\nfunction lookup(owner, key) {\n  return owner && (owner.context && owner.context[key] || owner.owner && lookup(owner.owner, key));\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      let result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id) {\n  return function provider(props) {\n    return createMemo(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    });\n  };\n}\n\nconst $RAW = Symbol(\"state-raw\"),\n      $NODE = Symbol(\"state-node\"),\n      $PROXY = Symbol(\"state-proxy\"),\n      $NAME = Symbol(\"state-name\");\nfunction wrap$1(value, name) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: p = new Proxy(value, proxyTraps$1)\n    });\n    let keys = Object.keys(value),\n        desc = Object.getOwnPropertyDescriptors(value);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      if (desc[prop].get) {\n        const get = desc[prop].get.bind(p);\n        Object.defineProperty(value, prop, {\n          get\n        });\n      }\n    }\n  }\n  return p;\n}\nfunction isWrappable(obj) {\n  return obj != null && typeof obj === \"object\" && (!obj.__proto__ || obj.__proto__ === Object.prototype || Array.isArray(obj));\n}\nfunction unwrap(item, set = new Set()) {\n  let result, unwrapped, v, prop;\n  if (result = item != null && item[$RAW]) return result;\n  if (!isWrappable(item) || set.has(item)) return item;\n  if (Array.isArray(item)) {\n    if (Object.isFrozen(item)) item = item.slice(0);else set.add(item);\n    for (let i = 0, l = item.length; i < l; i++) {\n      v = item[i];\n      if ((unwrapped = unwrap(v, set)) !== v) item[i] = unwrapped;\n    }\n  } else {\n    if (Object.isFrozen(item)) item = Object.assign({}, item);else set.add(item);\n    let keys = Object.keys(item),\n        desc = Object.getOwnPropertyDescriptors(item);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      prop = keys[i];\n      if (desc[prop].get) continue;\n      v = item[prop];\n      if ((unwrapped = unwrap(v, set)) !== v) item[prop] = unwrapped;\n    }\n  }\n  return item;\n}\nfunction getDataNodes(target) {\n  let nodes = target[$NODE];\n  if (!nodes) Object.defineProperty(target, $NODE, {\n    value: nodes = {}\n  });\n  return nodes;\n}\nfunction proxyDescriptor(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || property === $PROXY || property === $NODE || property === $NAME) return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  return desc;\n}\nfunction createDataNode() {\n  const [s, set] = createSignal(undefined, false);\n  s.set = set;\n  return s;\n}\nconst proxyTraps$1 = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    const value = target[property];\n    if (property === $NODE || property === \"__proto__\") return value;\n    const wrappable = isWrappable(value);\n    if (Listener && (typeof value !== \"function\" || target.hasOwnProperty(property))) {\n      let nodes, node;\n      if (wrappable && (nodes = getDataNodes(value))) {\n        node = nodes._ || (nodes._ = createDataNode());\n        node();\n      }\n      nodes = getDataNodes(target);\n      node = nodes[property] || (nodes[property] = createDataNode());\n      node();\n    }\n    return wrappable ? wrap$1(value) : value;\n  },\n  set() {\n    return true;\n  },\n  deleteProperty() {\n    return true;\n  },\n  getOwnPropertyDescriptor: proxyDescriptor\n};\nfunction setProperty(state, property, value) {\n  if (state[property] === value) return;\n  const array = Array.isArray(state);\n  const len = state.length;\n  const notify = array || !(property in state);\n  if (value === undefined) {\n    delete state[property];\n  } else state[property] = value;\n  let nodes = getDataNodes(state),\n      node;\n  (node = nodes[property]) && node.set();\n  if (array && state.length !== len) (node = nodes.length) && node.set();\n  notify && (node = nodes._) && node.set();\n}\nfunction mergeState(state, value) {\n  const keys = Object.keys(value);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    setProperty(state, key, value[key]);\n  }\n}\nfunction updatePath(current, path, traversed = []) {\n  let part,\n      prev = current;\n  if (path.length > 1) {\n    part = path.shift();\n    const partType = typeof part,\n          isArray = Array.isArray(current);\n    if (Array.isArray(part)) {\n      for (let i = 0; i < part.length; i++) {\n        updatePath(current, [part[i]].concat(path), [part[i]].concat(traversed));\n      }\n      return;\n    } else if (isArray && partType === \"function\") {\n      for (let i = 0; i < current.length; i++) {\n        if (part(current[i], i)) updatePath(current, [i].concat(path), [i].concat(traversed));\n      }\n      return;\n    } else if (isArray && partType === \"object\") {\n      const {\n        from = 0,\n        to = current.length - 1,\n        by = 1\n      } = part;\n      for (let i = from; i <= to; i += by) {\n        updatePath(current, [i].concat(path), [i].concat(traversed));\n      }\n      return;\n    } else if (path.length > 1) {\n      updatePath(current[part], path, [part].concat(traversed));\n      return;\n    }\n    prev = current[part];\n    traversed = [part].concat(traversed);\n  }\n  let value = path[0];\n  if (typeof value === \"function\") {\n    value = value(prev, traversed);\n    if (value === prev) return;\n  }\n  if (part === undefined && value == undefined) return;\n  value = unwrap(value);\n  if (part === undefined || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {\n    mergeState(prev, value);\n  } else setProperty(current, part, value);\n}\nfunction createState(state, options) {\n  const unwrappedState = unwrap(state || {});\n  const wrappedState = wrap$1(unwrappedState);\n  function setState(...args) {\n    batch(() => updatePath(unwrappedState, args));\n  }\n  return [wrappedState, setState];\n}\n\nconst proxyTraps = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    const value = target[property];\n    if (property === $NODE || property === \"__proto__\") return value;\n    const wrappable = isWrappable(value);\n    if (Listener && (typeof value !== \"function\" || target.hasOwnProperty(property))) {\n      let nodes, node;\n      if (wrappable && (nodes = getDataNodes(value))) {\n        node = nodes._ || (nodes._ = createDataNode());\n        node();\n      }\n      nodes = getDataNodes(target);\n      node = nodes[property] || (nodes[property] = createDataNode());\n      node();\n    }\n    return wrappable ? wrap(value) : value;\n  },\n  set(target, property, value) {\n    setProperty(target, property, unwrap(value));\n    return true;\n  },\n  deleteProperty(target, property) {\n    setProperty(target, property, undefined);\n    return true;\n  },\n  getOwnPropertyDescriptor: proxyDescriptor\n};\nfunction wrap(value, name) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: p = new Proxy(value, proxyTraps)\n    });\n    let keys = Object.keys(value),\n        desc = Object.getOwnPropertyDescriptors(value);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      if (desc[prop].get) {\n        const get = desc[prop].get.bind(p);\n        Object.defineProperty(value, prop, {\n          get\n        });\n      }\n      if (desc[prop].set) {\n        const og = desc[prop].set,\n              set = v => batch(() => og.call(p, v));\n        Object.defineProperty(value, prop, {\n          set\n        });\n      }\n    }\n  }\n  return p;\n}\nfunction createMutable(state, options) {\n  const unwrappedState = unwrap(state || {});\n  const wrappedState = wrap(unwrappedState);\n  return wrappedState;\n}\n\nfunction applyState(target, parent, property, merge, key) {\n  let previous = parent[property];\n  if (target === previous) return;\n  if (!isWrappable(target) || !isWrappable(previous) || key && target[key] !== previous[key]) {\n    target !== previous && setProperty(parent, property, target);\n    return;\n  }\n  if (Array.isArray(target)) {\n    if (target.length && previous.length && (!merge || key && target[0][key] != null)) {\n      let i, j, start, end, newEnd, item, newIndicesNext, keyVal;\n      for (start = 0, end = Math.min(previous.length, target.length); start < end && (previous[start] === target[start] || key && previous[start][key] === target[start][key]); start++) {\n        applyState(target[start], previous, start, merge, key);\n      }\n      const temp = new Array(target.length),\n            newIndices = new Map();\n      for (end = previous.length - 1, newEnd = target.length - 1; end >= start && newEnd >= start && (previous[end] === target[newEnd] || key && previous[end][key] === target[newEnd][key]); end--, newEnd--) {\n        temp[newEnd] = previous[end];\n      }\n      if (start > newEnd || start > end) {\n        for (j = start; j <= newEnd; j++) setProperty(previous, j, target[j]);\n        for (; j < target.length; j++) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        }\n        if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n        return;\n      }\n      newIndicesNext = new Array(newEnd + 1);\n      for (j = newEnd; j >= start; j--) {\n        item = target[j];\n        keyVal = key ? item[key] : item;\n        i = newIndices.get(keyVal);\n        newIndicesNext[j] = i === undefined ? -1 : i;\n        newIndices.set(keyVal, j);\n      }\n      for (i = start; i <= end; i++) {\n        item = previous[i];\n        keyVal = key ? item[key] : item;\n        j = newIndices.get(keyVal);\n        if (j !== undefined && j !== -1) {\n          temp[j] = previous[i];\n          j = newIndicesNext[j];\n          newIndices.set(keyVal, j);\n        }\n      }\n      for (j = start; j < target.length; j++) {\n        if (j in temp) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        } else setProperty(previous, j, target[j]);\n      }\n    } else {\n      for (let i = 0, len = target.length; i < len; i++) {\n        applyState(target[i], previous, i, merge, key);\n      }\n    }\n    if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n    return;\n  }\n  const targetKeys = Object.keys(target);\n  for (let i = 0, len = targetKeys.length; i < len; i++) {\n    applyState(target[targetKeys[i]], previous, targetKeys[i], merge, key);\n  }\n  const previousKeys = Object.keys(previous);\n  for (let i = 0, len = previousKeys.length; i < len; i++) {\n    if (target[previousKeys[i]] === undefined) setProperty(previous, previousKeys[i], undefined);\n  }\n}\nfunction reconcile(value, options = {}) {\n  const {\n    merge,\n    key = \"id\"\n  } = options,\n        v = unwrap(value);\n  return state => {\n    if (!isWrappable(state) || !isWrappable(v)) return v;\n    applyState(v, {\n      state\n    }, \"state\", merge, key);\n    return state;\n  };\n}\nconst setterTraps = {\n  get(target, property) {\n    if (property === $RAW) return target;\n    const value = target[property];\n    return isWrappable(value) ? new Proxy(value, setterTraps) : value;\n  },\n  set(target, property, value) {\n    setProperty(target, property, unwrap(value));\n    return true;\n  },\n  deleteProperty(target, property) {\n    setProperty(target, property, undefined);\n    return true;\n  }\n};\nfunction produce(fn) {\n  return state => {\n    if (isWrappable(state)) fn(new Proxy(state, setterTraps));\n    return state;\n  };\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      len = 0,\n      indexes = mapFn.length > 1 ? [] : null,\n      ctx = Owner;\n  onCleanup(() => {\n    for (let i = 0, length = disposers.length; i < length; i++) disposers[i]();\n  });\n  return () => {\n    let newItems = list() || [],\n        i,\n        j;\n    return untrack(() => {\n      let newLen = newItems.length,\n          newIndices,\n          newIndicesNext,\n          temp,\n          tempdisposers,\n          tempIndexes,\n          start,\n          end,\n          newEnd,\n          item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          for (i = 0; i < len; i++) disposers[i]();\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          }, ctx);\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n          for (j = 0; j < newLen; j++) {\n            items[j] = newItems[j];\n            mapped[j] = createRoot(mapper, ctx);\n          }\n          len = newLen;\n        } else {\n          temp = new Array(newLen);\n          tempdisposers = new Array(newLen);\n          indexes && (tempIndexes = new Array(newLen));\n          for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n          for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n            temp[newEnd] = mapped[end];\n            tempdisposers[newEnd] = disposers[end];\n            indexes && (tempIndexes[newEnd] = indexes[end]);\n          }\n          newIndices = new Map();\n          newIndicesNext = new Array(newEnd + 1);\n          for (j = newEnd; j >= start; j--) {\n            item = newItems[j];\n            i = newIndices.get(item);\n            newIndicesNext[j] = i === undefined ? -1 : i;\n            newIndices.set(item, j);\n          }\n          for (i = start; i <= end; i++) {\n            item = items[i];\n            j = newIndices.get(item);\n            if (j !== undefined && j !== -1) {\n              temp[j] = mapped[i];\n              tempdisposers[j] = disposers[i];\n              indexes && (tempIndexes[j] = indexes[i]);\n              j = newIndicesNext[j];\n              newIndices.set(item, j);\n            } else disposers[i]();\n          }\n          for (j = start; j < newLen; j++) {\n            if (j in temp) {\n              mapped[j] = temp[j];\n              disposers[j] = tempdisposers[j];\n              if (indexes) {\n                indexes[j] = tempIndexes[j];\n                indexes[j](j);\n              }\n            } else mapped[j] = createRoot(mapper, ctx);\n          }\n          len = mapped.length = newLen;\n          items = newItems.slice(0);\n        }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      signals = [],\n      len = 0,\n      i,\n      ctx = Owner;\n  onCleanup(() => {\n    for (let i = 0, length = disposers.length; i < length; i++) disposers[i]();\n  });\n  return () => {\n    const newItems = list() || [];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          for (i = 0; i < len; i++) disposers[i]();\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          }, ctx);\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper, ctx);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = mapped.length = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i], false);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nfunction createComponent(Comp, props) {\n  if (sharedConfig.context) {\n    const c = sharedConfig.context;\n    setHydrateContext(nextHydrateContext());\n    const r = untrack(() => Comp(props));\n    setHydrateContext(c);\n    return r;\n  }\n  return untrack(() => Comp(props));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction mergeProps(...sources) {\n  return new Proxy({\n    get(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        const v = sources[i][property];\n        if (v !== undefined) return v;\n      }\n    },\n    has(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        if (property in sources[i]) return true;\n      }\n      return false;\n    },\n    keys() {\n      const keys = [];\n      for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(sources[i]));\n      return [...new Set(keys)];\n    }\n  }, propTraps);\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  const res = keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      if (descriptors[key]) Object.defineProperty(clone, key, descriptors[key]);\n    }\n    return clone;\n  });\n  res.push(new Proxy({\n    get(property) {\n      return blocked.has(property) ? undefined : props[property];\n    },\n    has(property) {\n      return blocked.has(property) ? false : property in props;\n    },\n    keys() {\n      return Object.keys(props).filter(k => !blocked.has(k));\n    }\n  }, propTraps));\n  return res;\n}\nfunction lazy(fn) {\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    let comp;\n    if (ctx && sharedConfig.resources) {\n      ctx.count++;\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(mod.default);\n        setHydrateContext(undefined);\n      });\n      comp = s;\n    } else {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => (p || (p = fn())).then(mod => mod.default);\n  return wrap;\n}\n\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback ? fallback : undefined), undefined, false);\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback ? fallback : undefined), undefined, false);\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const condition = createMemo(() => props.when, undefined, (a, b) => strictEqual ? a === b : !a === !b);\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      return (strictEqual = typeof child === \"function\" && child.length > 0) ? untrack(() => child(c)) : child;\n    }\n    return props.fallback;\n  });\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  const conditions = children(() => props.children),\n        evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds)) conds = [conds];\n    for (let i = 0; i < conds.length; i++) {\n      const c = conds[i].when;\n      if (c) return [i, c, conds[i]];\n    }\n    return [-1];\n  }, undefined, (a, b) => a && a[0] === b[0] && (strictEqual ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2]);\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    return (strictEqual = typeof c === \"function\" && c.length > 0) ? untrack(() => c(when)) : c;\n  });\n}\nfunction Match(props) {\n  return props;\n}\nfunction ErrorBoundary(props) {\n  const [errored, setErrored] = createSignal();\n  onError(setErrored);\n  let e;\n  return createMemo(() => {\n    if ((e = errored()) != null) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored(null))) : f;\n    }\n    return props.children;\n  });\n}\n\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let index = 0,\n      suspenseSetter,\n      showContent,\n      showFallback;\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) {\n    const [inFallback, setFallback] = createSignal(false);\n    suspenseSetter = setFallback;\n    [showContent, showFallback] = listContext.register(inFallback);\n  }\n  const registry = [],\n        comp = createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        const [showingContent, showContent] = createSignal(false),\n              [showingFallback, showFallback] = createSignal(false);\n        registry[index++] = {\n          inFallback,\n          showContent,\n          showFallback\n        };\n        return [showingContent, showingFallback];\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n  createComputed(() => {\n    const reveal = props.revealOrder,\n          tail = props.tail,\n          visibleContent = showContent ? showContent() : true,\n          visibleFallback = showFallback ? showFallback() : true,\n          reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = registry.every(i => !i.inFallback());\n      suspenseSetter && suspenseSetter(!all);\n      registry.forEach(i => {\n        i.showContent(all && visibleContent);\n        i.showFallback(visibleFallback);\n      });\n      return;\n    }\n    let stop = false;\n    for (let i = 0, len = registry.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n            s = registry[n].inFallback();\n      if (!stop && !s) {\n        registry[n].showContent(visibleContent);\n        registry[n].showFallback(visibleFallback);\n      } else {\n        const next = !stop;\n        if (next && suspenseSetter) suspenseSetter(true);\n        if (!tail || next && tail === \"collapsed\") {\n          registry[n].showFallback(visibleFallback);\n        } else registry[n].showFallback(false);\n        stop = true;\n        registry[n].showContent(next);\n      }\n    }\n    if (!stop && suspenseSetter) suspenseSetter(false);\n  });\n  return comp;\n}\nfunction Suspense(props) {\n  let counter = 0,\n      showContent,\n      showFallback;\n  const [inFallback, setFallback] = createSignal(false),\n        SuspenseContext = getSuspenseContext(),\n        store = {\n    increment: () => {\n      if (++counter === 1) setFallback(true);\n    },\n    decrement: () => {\n      if (--counter === 0) setFallback(false);\n    },\n    inFallback,\n    effects: [],\n    resolved: false\n  };\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) [showContent, showFallback] = listContext.register(store.inFallback);\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      const rendered = untrack(() => props.children);\n      return createMemo(() => {\n        const inFallback = store.inFallback(),\n              visibleContent = showContent ? showContent() : true,\n              visibleFallback = showFallback ? showFallback() : true;\n        if (!inFallback && visibleContent) {\n          store.resolved = true;\n          resumeEffects(store.effects);\n          return rendered;\n        }\n        if (!visibleFallback) return;\n        return props.fallback;\n      });\n    }\n  });\n}\n\nfunction awaitSuspense() {}\nlet DEV;\n\nexport { $RAW, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, awaitSuspense, batch, cancelCallback, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createMutable, createRenderEffect, createResource, createRoot, createSelector, createSignal, createState, equalFn, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, on, onCleanup, onError, onMount, produce, reconcile, requestCallback, runWithOwner, sharedConfig, splitProps, untrack, unwrap, useContext, useTransition };\n","import { createMemo, createRoot, createRenderEffect, sharedConfig, createSignal, onCleanup, splitProps, untrack } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, mergeProps } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"allowpaymentrequest\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"ismap\", \"itemscope\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\", \"truespeed\"];\nconst Properties = new Set([\"className\", \"indeterminate\", \"value\", ...booleans]);\nconst ChildProperties = new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nconst DelegatedEvents = new Set([\"beforeinput\", \"click\", \"dblclick\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\n\nfunction memo(fn, equal) {\n  return createMemo(fn, undefined, equal);\n}\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = a[aEnd - 1].nextSibling,\n      map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) parentNode.removeChild(a[aStart]);\n        aStart++;\n      }\n    } else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    } else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n              sequence = 1,\n              t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else parentNode.removeChild(a[aStart++]);\n    }\n  }\n}\n\nconst $$EVENTS = Symbol(\"delegated-events\");\nfunction render(code, element, init) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    insert(element, code(), element.firstChild ? null : undefined, init);\n  });\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, check, isSVG) {\n  const t = document.createElement(\"template\");\n  t.innerHTML = html;\n  if (check && t.innerHTML.split(\"<\").length - 1 !== check) throw `Template html does not match input:\\n${t.innerHTML}\\n\\n${html}`;\n  let node = t.content.firstChild;\n  if (isSVG) node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents() {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    node.addEventListener(name, e => handler[0](handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value),\n        prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || key in value) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n          classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue) continue;\n    toggleClassKey(node, key, classValue);\n    prev[key] = classValue;\n  }\n  return value;\n}\nfunction style(node, value, prev = {}) {\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (prev = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, accessor, isSVG, skipChildren) {\n  if (typeof accessor === \"function\") {\n    createRenderEffect(current => spreadExpression(node, accessor(), current, isSVG, skipChildren));\n  } else spreadExpression(node, accessor, undefined, isSVG, skipChildren);\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}) {\n  let isCE, isProp, isChildProp;\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    if (value === prevProps[prop]) continue;\n    if (prop === \"style\") {\n      style(node, value, prevProps[prop]);\n    } else if (prop === \"class\" && !isSVG) {\n      node.className = value;\n    } else if (prop === \"classList\") {\n      classList(node, value, prevProps[prop]);\n    } else if (prop === \"ref\") {\n      value(node);\n    } else if (prop.slice(0, 3) === \"on:\") {\n      node.addEventListener(prop.slice(3), value);\n    } else if (prop.slice(0, 10) === \"oncapture:\") {\n      node.addEventListener(prop.slice(10), value, true);\n    } else if (prop.slice(0, 2) === \"on\") {\n      const name = prop.slice(2).toLowerCase();\n      const delegate = DelegatedEvents.has(name);\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (isProp = Properties.has(prop)) || (isCE = node.nodeName.includes(\"-\"))) {\n      if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[prop] = value;\n    } else {\n      const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n      if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n    }\n    prevProps[prop] = value;\n  }\n}\nfunction hydrate(code, element) {\n  sharedConfig.resources = globalThis._$HYDRATION.resources;\n  sharedConfig.completed = globalThis._$HYDRATION.completed;\n  sharedConfig.events = globalThis._$HYDRATION.events;\n  sharedConfig.context = {\n    id: \"\",\n    count: 0,\n    loadResource: globalThis._$HYDRATION.loadResource\n  };\n  sharedConfig.registry = new Map();\n  gatherHydratable(element);\n  const dispose = render(code, element, [...element.childNodes]);\n  sharedConfig.context = null;\n  return dispose;\n}\nfunction gatherHydratable(element) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    sharedConfig.registry.set(node.getAttribute(\"data-hk\"), node);\n  }\n}\nfunction getNextElement(template) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template.cloneNode(true);\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMarker(start) {\n  let end = start,\n      count = 0,\n      current = [];\n  if (sharedConfig.context) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"#\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        eventHandler(e);\n        events.shift();\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction eventHandler(e) {\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node;\n    }\n  });\n  while (node !== null) {\n    const handler = node[key];\n    if (handler) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler(data, e) : handler(e);\n      if (e.cancelBubble) return;\n    }\n    node = node.host && node.host !== node && node.host instanceof Node ? node.host : node.parentNode;\n  }\n}\nfunction spreadExpression(node, props, prevProps = {}, isSVG, skipChildren) {\n  if (!skipChildren && \"children\" in props) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps));\n  return prevProps;\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n        multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (t === \"number\") value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (sharedConfig.context) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    if (normalizeIncomingArray(array, value, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context && current.length) return current;\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else {\n      if (Array.isArray(current)) {\n        if (current.length === 0) {\n          appendNodes(parent, array, marker);\n        } else reconcileArrays(parent, current, array);\n      } else if (current == null || current === \"\") {\n        appendNodes(parent, array);\n      } else {\n        reconcileArrays(parent, multi && current || [parent.firstChild], array);\n      }\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else console.warn(`Skipped inserting`, value);\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n        t;\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item) || dynamic;\n    } else if ((t = typeof item) === \"string\") {\n      normalized.push(document.createTextNode(item));\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else normalized.push(document.createTextNode(item.toString()));\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && parent.removeChild(el);\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\n\nfunction renderToString(fn, options) {}\nfunction renderToStringAsync(fn, options) {}\nfunction renderToNodeStream(fn, options) {}\nfunction renderToWebStream(fn, options) {}\nfunction ssr(template, ...nodes) {}\nfunction resolveSSRNode(node) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrSpread(accessor) {}\nfunction ssrBoolean(key, value) {}\nfunction escape(html) {}\n\nconst isServer = false;\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props,\n        marker = document.createTextNode(\"\"),\n        mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s() && props.children;\n    } else return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot(dispose => insert(mount, () => !clean() ? renderPortal()() : dispose(), null));\n    onCleanup(() => {\n      if (sharedConfig.context) queueMicrotask(cleanup);else cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"host\", {\n      get() {\n        return marker.parentNode;\n      }\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  return createMemo(() => {\n    const component = p.component;\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, ChildProperties, DelegatedEvents, Dynamic, Portal, Properties, SVGElements, SVGNamespace, addEventListener, assign, classList, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, gatherHydratable, getHydrationKey, getNextElement, getNextMarker, hydrate, insert, isServer, memo, render, renderToNodeStream, renderToString, renderToStringAsync, renderToWebStream, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, spread, ssr, ssrBoolean, ssrClassList, ssrSpread, ssrStyle, style, template };\n","import { createSignal as t, createComputed as n, For as e } from \"solid-js\";import { template as o, delegateEvents as r, setAttribute as i, memo as c, addEventListener as l, style as s, effect as u, insert as d, createComponent as a } from \"solid-js/web\";export default {};const v = o(\"<table><thead><tr></tr></thead><tbody></tbody></table>\", 8),f = o(\"<th></th>\", 2),b = o(\"<tr></tr>\", 2),h = o(\"<td></td>\", 2),m = o('<span class=\"sort-icon\"></span>', 2);function p(o) {var r;const [c, p] = t(),[S, j] = t(o.rows, !1);function D() {const t = c();return void 0 !== t ? t : void 0 !== o.defaultSortDirection ? o.defaultSortDirection : [null, null];}n(() => {j(o.rows);});const C = null !== (r = o.rowSorter) && void 0 !== r ? r : _;function R() {const t = D();null === t[0] && void 0 !== o.defaultSortDirection ? j(C(S(), o.defaultSortDirection)) : null !== t[0] && j(C(S(), t));}const { headerRenderer: x = $, bodyRenderer: O = w, getRowID: A = k, accessors: I } = o;return void 0 === o.columns && (o.columns = function (t, n = 0) {const e = t[n],o = Object.keys(e),r = o.length,i = new Array(r);for (let t = 0; t < r; t++) i[t] = { id: o[t] };return i;}(o.rows, o.representitiveRowNumber)), R(), (() => {const t = v.cloneNode(!0),n = t.firstChild,r = n.firstChild,c = n.nextSibling;return d(r, a(e, { get each() {return o.columns;}, children: t => {const n = !1 !== t.sortable;return (() => {const e = f.cloneNode(!0);var o;return l(e, \"click\", n ? (o = t.id, t => {p(function (t, n, e) {let o;return o = e ? [null, null] : t[0] === n ? [t[0], \"asc\" === t[1] ? \"desc\" : \"asc\"] : [n, \"asc\"], o;}(D(), o, t.shiftKey)), R();}) : void 0, !0), e.className = n ? \"sortable\" : void 0, d(e, () => x(t), null), d(e, () => n ? function (t, n) {let e;e = null === t[0] || t[0] !== n ? N : \"asc\" === t[1] ? g : y;return (() => {const t = m.cloneNode(!0);return d(t, e), t;})();}(D(), t.id) : void 0, null), u(() => i(e, \"id\", I ? String(t.id) : void 0)), e;})();} })), d(c, a(e, { get each() {return S();}, children: t => {const n = function (t) {return I ? A(t) : void 0;}(t);return (() => {const r = b.cloneNode(!0);return i(r, \"id\", n), d(r, a(e, { get each() {return o.columns;}, children: e => (() => {const o = h.cloneNode(!0);return l(o, \"click\", void 0 !== e.onClick ? n => e.onClick(n, t) : void 0, !0), d(o, () => O(t, e.id)), u(() => i(o, \"id\", n ? `${n}.${e.id}` : void 0)), o;})() })), r;})();} })), u(n => {var e;const r = `solid-simple-table ${null !== (e = o.className) && void 0 !== e ? e : \"\"}`,i = o.style;return r !== n._v$ && (t.className = n._v$ = r), n._v$2 = s(t, i, n._v$2), n;}, { _v$: void 0, _v$2: void 0 }), t;})();}export { p as SimpleTable };const y = \"↑\",g = \"↓\",N = \"⇅\";function S(t) {return \"string\" == typeof t ? t : JSON.stringify(t);}function $(t) {var n;return null !== (n = t.label) && void 0 !== n ? n : t.id;}function w(t, n) {return S(\"object\" == typeof t ? t[n] : t);}function k(t) {return S(t);}function _(t, n) {if (!t.length) return t;let e;const o = n[0];return e = \"object\" == typeof t[0] ? t.sort((t, n) => {const e = t[o],r = n[o];return e === r ? 0 : e < r ? -1 : 1;}) : t.sort(), \"desc\" === n[1] ? e.reverse() : e;}r([\"click\"]);","import { template as _$template } from \"solid-js/web\";\nimport { effect as _$effect } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { setAttribute as _$setAttribute } from \"solid-js/web\";\n\nconst _tmpl$ = _$template(`<div id=\"linter-panel\"></div>`, 2),\n      _tmpl$2 = _$template(`<div></div>`, 2);\n\nimport { createSignal, onMount } from 'solid-js';\nimport { SimpleTable } from 'solid-simple-table';\nimport { $range, severityNames, sortMessages, visitMessage, openExternally, getPathOfMessage } from '../helpers';\nimport type Delegate from './delegate';\nimport type { LinterMessage } from '../types';\ntype Props = {\n  delegate: Delegate;\n};\nexport function PanelComponent(props: Props) {\n  const [getMessages, setMessages] = createSignal(props.delegate.filteredMessages, false);\n  onMount(() => {\n    props.delegate.onDidChangeMessages(messages => {\n      setMessages(messages);\n    });\n  });\n  const columns = [{\n    id: 'severity',\n    label: 'Severity'\n  }, {\n    id: 'linterName',\n    label: 'Provider'\n  }, {\n    id: 'excerpt',\n    label: 'Description',\n    onClick,\n    sortable: false\n  }, {\n    id: 'line',\n    label: 'Line',\n    onClick\n  }];\n\n  if (props.delegate.panelRepresents === 'Entire Project') {\n    columns.push({\n      id: 'file',\n      label: 'File',\n      onClick\n    });\n  }\n\n  return (() => {\n    const _el$ = _tmpl$.cloneNode(true);\n\n    _$setAttribute(_el$, \"tabindex\", -1);\n\n    _el$.style.setProperty(\"overflowY\", 'scroll');\n\n    _el$.style.setProperty(\"height\", '100%');\n\n    _$insert(_el$, _$createComponent(SimpleTable, {\n      get rows() {\n        return getMessages();\n      },\n\n      columns: columns,\n      defaultSortDirection: ['severity', 'asc'],\n      rowSorter: sortMessages,\n      accessors: true,\n      getRowID: (i: LinterMessage) => i.key,\n      bodyRenderer: bodyRenderer,\n      style: {\n        width: '100%'\n      },\n      className: \"linter dark\"\n    }));\n\n    return _el$;\n  })();\n}\n\nfunction bodyRenderer(row: LinterMessage, column: string): string | HTMLElement {\n  const range = $range(row);\n\n  switch (column) {\n    case 'file':\n      return getPathOfMessage(row);\n\n    case 'line':\n      return range ? `${range.start.row + 1}:${range.start.column + 1}` : '';\n\n    case 'excerpt':\n      return row.excerpt;\n\n    case 'severity':\n      return ((() => {\n        const _el$2 = _tmpl$2.cloneNode(true);\n\n        _$insert(_el$2, () => severityNames[row.severity]);\n\n        _$effect(() => _el$2.className = `solid-simple-table linter ${row.severity}`);\n\n        return _el$2;\n      })() as HTMLElement);\n\n    default:\n      return row[column];\n  }\n}\n\nasync function onClick(e: MouseEvent, row: LinterMessage) {\n  if ((e.target as HTMLElement).tagName === 'A') {\n    return;\n  }\n\n  if (process.platform === 'darwin' ? e.metaKey : e.ctrlKey) {\n    if (e.shiftKey) {\n      openExternally(row);\n    } else {\n      await visitMessage(row, true);\n    }\n  } else {\n    await visitMessage(row);\n  }\n}","import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { CompositeDisposable, Dock, WorkspaceCenter } from 'atom';\nconst {\n  config,\n  workspace,\n  views\n} = atom;\nimport { WORKSPACE_URI, DOCK_ALLOWED_LOCATIONS, DOCK_DEFAULT_LOCATION } from '../helpers';\nimport type Delegate from './delegate';\nimport { render } from 'solid-js/web'; // NOTE: these were lazy\n\nimport { PanelComponent } from './component'; // TODO Make these API public\n\nexport type PaneContainer = Dock & {\n  state: {\n    size: number;\n  };\n  render: Function;\n  paneForItem: WorkspaceCenter['paneForItem'];\n  location: string;\n}; // eslint-disable-next-line no-use-before-define\n\nfunction getPaneContainer(item: PanelDock): PaneContainer | null {\n  const paneContainer = workspace.paneContainerForItem(item); // NOTE: This is an internal API access\n  // It's necessary because there's no Public API for it yet\n\n  if (paneContainer && // @ts-ignore internal API\n  typeof paneContainer.state === 'object' && // @ts-ignore internal API\n  typeof paneContainer.state.size === 'number' && // @ts-ignore internal API\n  typeof paneContainer.render === 'function') {\n    // @ts-ignore internal API\n    return (paneContainer as PaneContainer);\n  }\n\n  return null;\n}\n\nexport default class PanelDock {\n  element: HTMLElement = document.createElement('div');\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  panelHeight: number = 100;\n  alwaysTakeMinimumSpace: boolean = true;\n  lastSetPaneHeight?: number;\n\n  constructor(delegate: Delegate) {\n    this.subscriptions.add(config.observe('linter-ui-default.panelHeight', panelHeight => {\n      const changed = typeof this.panelHeight === 'number';\n      this.panelHeight = panelHeight;\n\n      if (changed) {\n        this.doPanelResize(true);\n      }\n    }), config.observe('linter-ui-default.alwaysTakeMinimumSpace', alwaysTakeMinimumSpace => {\n      this.alwaysTakeMinimumSpace = alwaysTakeMinimumSpace;\n    }));\n    this.doPanelResize();\n    render(() => _$createComponent(PanelComponent, {\n      delegate: delegate\n    }), this.element);\n  } // NOTE: Chose a name that won't conflict with Dock APIs\n\n\n  doPanelResize(forConfigHeight = false) {\n    const paneContainer = getPaneContainer(this);\n\n    if (paneContainer === null) {\n      return;\n    }\n\n    let minimumHeight: number | null = null;\n    const paneContainerView = views.getView(paneContainer);\n\n    if (paneContainerView && this.alwaysTakeMinimumSpace) {\n      // NOTE: Super horrible hack but the only possible way I could find :((\n      const dockNamesElement = paneContainerView.querySelector('.list-inline.tab-bar.inset-panel');\n      const dockNamesRects = dockNamesElement ? dockNamesElement.getClientRects()[0] : null;\n      const tableElement = this.element.querySelector('table');\n      const panelRects = tableElement ? tableElement.getClientRects()[0] : null;\n\n      if (dockNamesRects && panelRects) {\n        minimumHeight = dockNamesRects.height + panelRects.height + 1;\n      }\n    }\n\n    let updateConfigHeight: number | null = null;\n    const heightSet = minimumHeight !== null && !forConfigHeight ? Math.min(minimumHeight, this.panelHeight) : this.panelHeight; // Person resized the panel, save new resized value to config\n\n    if (this.lastSetPaneHeight !== undefined && paneContainer.state.size !== this.lastSetPaneHeight && !forConfigHeight) {\n      updateConfigHeight = paneContainer.state.size;\n    }\n\n    this.lastSetPaneHeight = heightSet;\n    paneContainer.state.size = heightSet;\n    paneContainer.render(paneContainer.state);\n\n    if (updateConfigHeight !== null) {\n      config.set('linter-ui-default.panelHeight', updateConfigHeight);\n    }\n  }\n  /* eslint-disable class-methods-use-this */\n  // atom API requires these methods\n\n\n  getURI() {\n    return WORKSPACE_URI;\n  }\n\n  getTitle() {\n    return 'Linter';\n  }\n\n  getDefaultLocation() {\n    return DOCK_DEFAULT_LOCATION;\n  }\n\n  getAllowedLocations() {\n    return DOCK_ALLOWED_LOCATIONS;\n  }\n\n  getPreferredHeight() {\n    return config.get('linter-ui-default.panelHeight');\n  }\n  /* eslint-enable class-methods-use-this */\n\n\n  dispose() {\n    this.subscriptions.dispose();\n    const paneContainer = getPaneContainer(this);\n\n    if (paneContainer !== null && !this.alwaysTakeMinimumSpace && paneContainer.state.size !== this.panelHeight) {\n      config.set('linter-ui-default.panelHeight', paneContainer.state.size);\n      paneContainer.paneForItem(this)?.destroyItem(this, true);\n    }\n  }\n\n}","export function getElement(icon: string): HTMLElement {\n  const element = document.createElement('a');\n  element.classList.add(`icon-${icon}`);\n  element.appendChild(document.createTextNode(''));\n  return element;\n}","import { template as _$template } from \"solid-js/web\";\nimport { delegateEvents as _$delegateEvents } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { addEventListener as _$addEventListener } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { effect as _$effect } from \"solid-js/web\";\n\nconst _tmpl$ = _$template(`<a><span></span></a>`, 4),\n      _tmpl$2 = _$template(`<button class=\"btn fix-btn\">Fix</button>`, 2),\n      _tmpl$3 = _$template(`<a><span class=\"icon linter-icon icon-alignment-aligned-to\"></span></a>`, 4),\n      _tmpl$4 = _$template(`<a><span class=\"icon linter-icon icon-link\"></span></a>`, 4),\n      _tmpl$5 = _$template(`<div class=\"linter-line\"></div>`, 2),\n      _tmpl$6 = _$template(`<div class=\"linter-message\"><div><div class=\"linter-text\"><div class=\"provider-name\"></div></div><div class=\"linter-buttons-right\"></div></div></div>`, 10);\n\nconst {\n  workspace\n} = atom;\nimport { createSignal, onMount, createEffect, Show } from 'solid-js';\nimport * as url from 'url';\nimport { debounce, once, visitMessage, openExternally, openFile, applySolution, sortSolutions } from '../helpers';\nlet marked: typeof import('marked') | undefined;\nimport type TooltipDelegate from './delegate';\nimport type { Message, LinterMessage } from '../types'; // TODO why do we need to debounce/once these buttons? They shouldn't be called multiple times\n\ntype Props = {\n  key: string;\n  message: Message;\n  delegate: TooltipDelegate;\n};\nexport default function MessageElement(props: Props) {\n  const [getDescription, setDescription] = createSignal('Loading ...');\n  const [getShowDescription, setShowDescription] = createSignal(false);\n  createEffect(async () => {\n    if (getShowDescription()) {\n      const description = props.message.description;\n      console.log(description);\n\n      if (typeof description === 'string') {\n        setDescription(await renderMarkdown(description));\n      } else if (typeof description === 'function') {\n        const response = await description();\n\n        if (typeof response !== 'string') {\n          throw new Error(`Expected result to be string, got: ${typeof response}`);\n        }\n\n        setDescription(response);\n      } else {\n        console.error('[Linter] Invalid description detected, expected string or function but got:', typeof description);\n      }\n    }\n  });\n  onMount(() => {\n    props.delegate.onShouldUpdate(() => {\n      setShowDescription(false);\n      setDescription('Loading ...');\n    });\n    props.delegate.onShouldExpand(() => {\n      setShowDescription(true);\n    });\n    props.delegate.onShouldCollapse(() => {\n      setShowDescription(false);\n    });\n  }); // These props are static (non-reactive)\n\n  const {\n    message,\n    delegate\n  } = props;\n  return (() => {\n    const _el$ = _tmpl$6.cloneNode(true),\n          _el$2 = _el$.firstChild,\n          _el$6 = _el$2.firstChild,\n          _el$7 = _el$6.firstChild,\n          _el$8 = _el$6.nextSibling;\n\n    _el$.$$click = thisOpenFile;\n\n    _$insert(_el$2, _$createComponent(Show, {\n      get when() {\n        return message.description !== undefined;\n      },\n\n      get children() {\n        const _el$3 = _tmpl$.cloneNode(true),\n              _el$4 = _el$3.firstChild;\n\n        _el$3.$$click = () => setShowDescription(!getShowDescription());\n\n        _$effect(() => _el$4.className = `icon linter-icon icon-${getShowDescription() ? 'chevron-down' : 'chevron-right'}`);\n\n        return _el$3;\n      }\n\n    }), _el$6);\n\n    _$insert(_el$2, _$createComponent(Show, {\n      get when() {\n        return canBeFixed(message);\n      },\n\n      get children() {\n        const _el$5 = _tmpl$2.cloneNode(true);\n\n        _$addEventListener(_el$5, \"click\", once(() => onFixClick(message)), true);\n\n        return _el$5;\n      }\n\n    }), _el$6);\n\n    _$insert(_el$7, _$createComponent(Show, {\n      get when() {\n        return delegate.showProviderName === true;\n      },\n\n      get children() {\n        return `${message.linterName}: `;\n      }\n\n    }));\n\n    _$insert(_el$6, () => // main message text\n    message.excerpt, null);\n\n    _$insert(_el$8, _$createComponent(Show, {\n      get when() {\n        return message.reference?.file !== undefined;\n      },\n\n      get children() {\n        const _el$9 = _tmpl$3.cloneNode(true);\n\n        _$addEventListener(_el$9, \"click\", debounce(() => visitMessage(message, true)), true);\n\n        return _el$9;\n      }\n\n    }), null);\n\n    _$insert(_el$8, _$createComponent(Show, {\n      get when() {\n        return message.url !== undefined;\n      },\n\n      get children() {\n        const _el$10 = _tmpl$4.cloneNode(true);\n\n        _$addEventListener(_el$10, \"click\", debounce(() => openExternally(message)), true);\n\n        return _el$10;\n      }\n\n    }), null);\n\n    _$insert(_el$, _$createComponent(Show, {\n      get when() {\n        return getShowDescription();\n      },\n\n      get children() {\n        const _el$11 = _tmpl$5.cloneNode(true);\n\n        _$effect(() => _el$11.innerHTML = getDescription());\n\n        return _el$11;\n      }\n\n    }), null);\n\n    _$effect(() => _el$2.className = `linter-excerpt ${message.severity}`);\n\n    return _el$;\n  })();\n}\n\nfunction onFixClick(message: Message): void {\n  const messageSolutions = message.solutions;\n  const textEditor = workspace.getActiveTextEditor();\n\n  if (textEditor !== undefined) {\n    if (Array.isArray(messageSolutions) && messageSolutions.length > 0) {\n      applySolution(textEditor, sortSolutions(messageSolutions)[0]);\n    }\n  }\n}\n\nfunction canBeFixed(message: LinterMessage): boolean {\n  const messageSolutions = message.solutions;\n\n  if (Array.isArray(messageSolutions) && messageSolutions.length > 0) {\n    return true;\n  }\n\n  return false;\n}\n\nasync function thisOpenFile(ev: MouseEvent) {\n  if (!(ev.target instanceof HTMLElement)) {\n    return;\n  }\n\n  const href = findHref(ev.target);\n\n  if (href === null) {\n    return;\n  } // parse the link. e.g. atom://linter?file=<path>&row=<number>&column=<number>\n\n\n  const {\n    protocol,\n    hostname,\n    query\n  } = url.parse(href, true);\n\n  if (protocol !== 'atom:' || hostname !== 'linter') {\n    return;\n  } // TODO: based on the types query is never null\n\n\n  if (query?.file === undefined) {\n    return;\n  } else {\n    const {\n      file,\n      row,\n      column\n    } = query; // TODO: will these be an array?\n\n    await openFile(\n    /* file */\n    Array.isArray(file) ? file[0] : file,\n    /* position */\n    {\n      row: row !== undefined ? parseInt(Array.isArray(row) ? row[0] : row, 10) : 0,\n      column: column !== undefined ? parseInt(Array.isArray(column) ? column[0] : column, 10) : 0\n    });\n  }\n}\n\nfunction findHref(elementGiven: HTMLElement): string | null {\n  let el: HTMLElement | null = elementGiven;\n\n  while (el !== null && !el.classList.contains('linter-line')) {\n    if (el instanceof HTMLAnchorElement) {\n      return el.href;\n    }\n\n    el = el.parentElement;\n  }\n\n  return null;\n}\n\nasync function renderMarkdown(description: string) {\n  if (marked === undefined) {\n    // eslint-disable-next-line require-atomic-updates\n    marked = (await import('marked')).default;\n  }\n\n  return marked(description);\n}\n\n_$delegateEvents([\"click\"]);","import type { TextEditor, TextEditorComponent } from \"atom\"\n\n/** makes the text selectable and copyable\n *\n * Note: you can directly add `user-select: text` (and `pointer-events: all`) in CSS for better performance\n */\nexport function makeOverlaySelectable(editor: TextEditor, overlayElement: HTMLElement, focusFix = true) {\n  // allow the browser to handle selecting\n  overlayElement.setAttribute(\"tabindex\", \"-1\")\n\n  // make it selectable\n  if (!overlayElement.style.userSelect || overlayElement.style.userSelect === \"none\") {\n    overlayElement.style.userSelect = \"text\"\n  }\n\n  if (focusFix) {\n    // fix overlay focus issue\n    overlayFocusFix(editor, overlayElement)\n  }\n\n  // add copy keybindings\n  overlayElement.classList.add(\"native-key-bindings\")\n}\n\n/**\n * - focus on the datatip once the text is selected (cursor gets disabled temporarily)\n * - remove focus once mouse leaves\n */\nexport function overlayFocusFix(editor: TextEditor, element: HTMLElement) {\n  const editorComponent = atom.views.getView(editor).getComponent()\n  element.addEventListener(\"mousedown\", () => {\n    blurEditor(editorComponent)\n    element.addEventListener(\"mouseleave\", () => {\n      focusEditor(editorComponent)\n    })\n  })\n}\n\nexport function focusEditor(editorComponent: TextEditorComponent) {\n  // @ts-ignore internal api\n  editorComponent?.didFocus()\n}\n\nexport function blurEditor(editorComponent: TextEditorComponent) {\n  // @ts-ignore internal api\n  editorComponent?.didBlurHiddenInput({\n    relatedTarget: null,\n  })\n}\n\n/*\n██████  ███████ ██████  ██████  ███████  ██████  █████  ████████ ███████ ██████\n██   ██ ██      ██   ██ ██   ██ ██      ██      ██   ██    ██    ██      ██   ██\n██   ██ █████   ██████  ██████  █████   ██      ███████    ██    █████   ██   ██\n██   ██ ██      ██      ██   ██ ██      ██      ██   ██    ██    ██      ██   ██\n██████  ███████ ██      ██   ██ ███████  ██████ ██   ██    ██    ███████ ██████\n*/\n\n/** @deprecated use `makeOverlaySelectable` instead.\n *\n * Makes the overlay component copyable\n * - you should call `makeOverlaySelectable` before this\n * - If your element already has mouseenter and mouseleav listeners, directly use `copyListener`\n */\nexport function makeOverLayCopyable(element: HTMLElement) {\n  element.addEventListener(\"mouseenter\", () => {\n    element.addEventListener(\"keydown\", copyListener)\n  })\n\n  element.addEventListener(\"mouseleave\", () => {\n    element.removeEventListener(\"keydown\", copyListener)\n  })\n}\n\n/** @deprecated use `makeOverlaySelectable` instead.\n *\n * A manual copy listener\n * Usage. Add the listener to your mouse enter and mouseleave listeners\n   ```ts\n   element.addEventListener(\"mouseenter\", () => {element.addEventListener(\"keydown\", copyListener)}`\n   element.addEventListener(\"mouseleave\", () => {element.removeEventListener(\"keydown\", copyListener)}`\n   ```\n*/\nexport async function copyListener(event: KeyboardEvent) {\n  event.preventDefault()\n  if (event.ctrlKey && event.key === \"c\") {\n    const text = document.getSelection()?.toString() ?? \"\"\n    await navigator.clipboard.writeText(text)\n  }\n} // TODO we should not need to manually listen for copy paste\n","import { template as _$template } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\n\nconst _tmpl$ = _$template(`<div class=\"linter-messages\"></div>`, 2);\n\nimport { For, Show, render } from 'solid-js/web';\nimport { CompositeDisposable, Emitter, TextEditorElement } from 'atom';\nimport type { Disposable, Point, TextEditor, DisplayMarker } from 'atom';\nimport Delegate from './delegate';\nimport MessageElement from './message';\nimport { $range } from '../helpers';\nimport type { LinterMessage } from '../types';\nimport { makeOverlaySelectable } from 'atom-ide-base/commons-ui/float-pane/selectable-overlay';\nexport default class Tooltip {\n  marker: DisplayMarker;\n  element: HTMLElement = document.createElement('div');\n  emitter = new Emitter<{\n    'did-destroy': never;\n  }>();\n  messages: Array<LinterMessage>;\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n\n  constructor(messages: Array<LinterMessage>, position: Point, textEditor: TextEditor) {\n    this.messages = messages;\n    this.marker = textEditor.markBufferRange([position, position]);\n    this.marker.onDidDestroy(() => this.emitter.emit('did-destroy'));\n    const delegate = new Delegate(); // make tooltips copyable and selectable\n\n    makeOverlaySelectable(textEditor, this.element);\n    this.element.id = 'linter-tooltip';\n    textEditor.decorateMarker(this.marker, {\n      type: 'overlay',\n      item: this.element\n    });\n    this.subscriptions.add(this.emitter, delegate);\n    render(() => _$createComponent(TooltipElement, {\n      messages: messages,\n      delegate: delegate\n    }), this.element);\n    moveElement(this.element, position, textEditor);\n  }\n\n  isValid(position: Point, messages: Map<string, LinterMessage>): boolean {\n    if (this.messages.length !== 1 || !messages.has(this.messages[0].key)) {\n      return false;\n    }\n\n    const range = $range(this.messages[0]);\n    return range?.containsPoint(position) === true;\n  }\n\n  onDidDestroy(callback: () => void): Disposable {\n    return this.emitter.on('did-destroy', callback);\n  }\n\n  dispose() {\n    this.emitter.emit('did-destroy');\n    this.subscriptions.dispose();\n  }\n\n}\ninterface TooltipElementProps {\n  messages: LinterMessage[];\n  delegate: Delegate;\n}\n\nfunction TooltipElement(props: TooltipElementProps) {\n  return (() => {\n    const _el$ = _tmpl$.cloneNode(true);\n\n    _$insert(_el$, _$createComponent(For, {\n      get each() {\n        return props.messages;\n      },\n\n      children: message => _$createComponent(Show, {\n        get when() {\n          return message.version === 2;\n        },\n\n        get children() {\n          return _$createComponent(MessageElement, {\n            get key() {\n              return message.key;\n            },\n\n            get delegate() {\n              return props.delegate;\n            },\n\n            message: message\n          });\n        }\n\n      })\n    }));\n\n    return _el$;\n  })();\n}\n/** Move box above the current editing line */\n// HACK: patch the decoration's style so it is shown above the current line\n\n\nfunction moveElement(element: HTMLElement, position: Point, textEditor: TextEditor) {\n  setTimeout(() => {\n    const hight = element.getBoundingClientRect().height;\n    const lineHight = textEditor.getLineHeightInPixels(); // @ts-ignore: internal API\n\n    const availableHight = (position.row - textEditor.getFirstVisibleScreenRow()) * lineHight;\n\n    if (hight < availableHight) {\n      const overlay = element.parentElement;\n\n      if (overlay !== null) {\n        overlay.style.transform = `translateY(-${2 + lineHight + hight}px)`;\n      }\n    } else {\n      // move down so it does not overlap with datatip-overlay\n      // @ts-ignore\n      const dataTip = (textEditor.getElement() as TextEditorElement).querySelector<HTMLElement>('.datatip-overlay');\n\n      if (dataTip !== null) {\n        const overlay = element.parentElement;\n\n        if (overlay !== null) {\n          overlay.style.transform = `translateY(${dataTip.clientHeight}px)`;\n        }\n      }\n    }\n\n    element.style.visibility = 'visible';\n  }, 50);\n}","import { TextEditor } from \"atom\"\n\n/**\n * Find if an editor's largeness based on the given threashold\n * @param editor\n * @param largeLineCount lineCountIfLarge threashold\n * @param longLineLength lineLengthIfLong threashold\n * @returns the largness score if editor is large. Otherwise it returns 0 (a small file)\n */\nexport function largeness(\n  editor: TextEditor,\n  largeLineCount: number = atom.config.get(\"atom-ide-base.largeLineCount\") || 4000,\n  longLineLength: number = atom.config.get(\"atom-ide-base.longLineLength\") || 4000\n) {\n  const lineCount = lineCountIfLarge(editor, largeLineCount)\n  if (lineCount !== 0) {\n    return lineCount\n  }\n  const longLine = lineLengthIfLong(editor, longLineLength)\n  if (longLine !== 0) {\n    return longLine\n  }\n  return 0 // small file\n}\n\n/**\n * Find if an editor has a line that is longer than the given threashold\n * @param editor\n * @param threashold largeLineCount threashold\n * @returns the line count if it is larger than threashold. Otherwise it returns 0 (a small file)\n */\nexport function lineCountIfLarge(editor: TextEditor, threashold: number) {\n  // @ts-ignore\n  if (editor.largeFileMode) {\n    return 100000\n  }\n  const lineCount = editor.getLineCount()\n  if (lineCount >= threashold) {\n    return lineCount\n  }\n  return 0 // small file\n}\n\n/**\n * Find if an editor has a line that is longer than the given threashold\n * @param editor\n * @param threashold lineLengthForRow threashold\n * @param lineCount count up to this line. Default is {editor.getLineCount()}\n * @returns the first line length that has a length larger than threashold. If no line is found, it returns 0\n */\nexport function lineLengthIfLong(editor: TextEditor, threashold: number, lineCount: number = editor.getLineCount()) {\n  const buffer = editor.getBuffer()\n  for (let i = 0, len = lineCount; i < len; i++) {\n    const lineLength = buffer.lineLengthForRow(i)\n    if (lineLength > threashold) {\n      return lineLength\n    }\n  }\n  return 0 // small file\n}\n","import { CompositeDisposable } from 'atom';\nconst {\n  config\n} = atom;\nimport disposableEvent from 'disposable-event';\nimport type { TargetWithAddEventListener } from 'disposable-event/src/target';\nimport { debounce, get } from '../helpers';\nimport { calculateDecorations } from './helpers';\nimport type { LinterMessage } from '../types';\nexport type TreeViewHighlight = {\n  info: boolean;\n  error: boolean;\n  warning: boolean;\n};\nexport default class TreeView {\n  messages: Array<LinterMessage> = [];\n  decorations: Record<string, TreeViewHighlight> = {};\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  decorateOnTreeView?: 'Files and Directories' | 'Files' | 'None';\n\n  constructor() {\n    this.subscriptions.add(config.observe('linter-ui-default.decorateOnTreeView', (decorateOnTreeView: TreeView['decorateOnTreeView']) => {\n      if (typeof this.decorateOnTreeView === 'undefined') {\n        this.decorateOnTreeView = decorateOnTreeView;\n      } else if (decorateOnTreeView === 'None') {\n        this.update([]);\n        this.decorateOnTreeView = decorateOnTreeView;\n      } else {\n        const messages = this.messages;\n        this.decorateOnTreeView = decorateOnTreeView;\n        this.update(messages);\n      }\n    }));\n    setTimeout(() => {\n      const element = TreeView.getElement();\n\n      if (!element) {\n        return;\n      } // Subscription is only added if the CompositeDisposable hasn't been disposed\n\n\n      this.subscriptions.add(disposableEvent(((element as unknown) as TargetWithAddEventListener), 'click', debounce(() => {\n        this.update();\n      }), {\n        passive: true\n      }));\n    }, 100);\n  }\n\n  update(givenMessages: Array<LinterMessage> | null | undefined = null) {\n    if (Array.isArray(givenMessages)) {\n      this.messages = givenMessages;\n    }\n\n    const messages = this.messages;\n    const element = TreeView.getElement();\n    const decorateOnTreeView = this.decorateOnTreeView;\n\n    if (!element || decorateOnTreeView === 'None') {\n      return;\n    }\n\n    this.applyDecorations(calculateDecorations(decorateOnTreeView, messages));\n  }\n\n  applyDecorations(decorations: Record<string, TreeViewHighlight | undefined>) {\n    const treeViewElement = TreeView.getElement();\n\n    if (!treeViewElement) {\n      return;\n    }\n\n    const elementCache = new Map<string, HTMLElement>();\n    const appliedDecorations: Record<string, TreeViewHighlight> = {};\n    const filePaths = Object.keys(this.decorations);\n\n    for (const filePath of filePaths) {\n      if (!(filePath in decorations)) {\n        // Removed\n        const element = get(elementCache, filePath, () => TreeView.getElementByPath(treeViewElement, filePath));\n\n        if (element !== null) {\n          removeDecoration(element);\n        }\n      }\n    }\n\n    const filePathsNew = Object.keys(decorations);\n\n    for (const filePath of filePathsNew) {\n      const element = get(elementCache, filePath, () => TreeView.getElementByPath(treeViewElement, filePath));\n\n      if (element !== null) {\n        // decorations[filePath] is not undefined because we are looping over the existing keys\n        const decoration = (decorations[filePath] as TreeViewHighlight);\n        handleDecoration(element, decoration, Boolean(this.decorations[filePath]));\n        appliedDecorations[filePath] = decoration;\n      }\n    }\n\n    this.decorations = appliedDecorations;\n  }\n\n  dispose() {\n    this.subscriptions.dispose();\n  }\n\n  static getElement(): HTMLElement | null {\n    return document.querySelector('.tree-view');\n  }\n\n  static getElementByPath(parent: HTMLElement, filePath: string): HTMLElement | null {\n    return parent.querySelector(`[data-path=${CSS.escape(filePath)}]`);\n  }\n\n}\n\nfunction handleDecoration(element: HTMLElement, highlights: TreeViewHighlight, update: boolean = false) {\n  let decoration: HTMLElement | null = null;\n\n  if (update) {\n    decoration = element.querySelector('linter-decoration');\n  }\n\n  if (decoration !== null) {\n    decoration.className = '';\n  } else {\n    decoration = document.createElement('linter-decoration');\n    element.appendChild(decoration);\n  }\n\n  if (highlights.error) {\n    decoration.classList.add('linter-error');\n  } else if (highlights.warning) {\n    decoration.classList.add('linter-warning');\n  } else if (highlights.info) {\n    decoration.classList.add('linter-info');\n  }\n}\n\nfunction removeDecoration(element: HTMLElement) {\n  element.querySelector('linter-decoration')?.remove();\n}","const {\n  config,\n  packages\n} = atom;\nimport LinterUI from './main';\nimport type Intentions from './intentions';\nimport type {\n/* IntentionsListProvider, */\nPackageExtra } from './types';\nimport type { StatusBar as StatusBarRegistry } from 'atom/status-bar';\nimport type { BusySignalRegistry } from 'atom-ide-base';\nconst idleCallbacks: Set<IdleCallbackHandle> = new Set();\nconst instances: Set<LinterUI> = new Set();\nlet signalRegistry: BusySignalRegistry | undefined;\nlet statusBarRegistry: StatusBarRegistry | undefined;\nexport function activate() {\n  if ((config.get('linter-ui-default.useBusySignal') as boolean)) {\n    // This is a necessary evil, see steelbrain/linter#1355\n    ;\n    (packages.getLoadedPackage('linter-ui-default') as PackageExtra).metadata['package-deps'].push('busy-signal');\n  }\n\n  const callbackID = window.requestIdleCallback(async () => {\n    idleCallbacks.delete(callbackID);\n\n    if (!atom.inSpecMode()) {\n      await package_deps();\n    }\n  });\n  idleCallbacks.add(callbackID);\n}\n/** Install Atom package dependencies if not already loaded */\n\nasync function package_deps() {\n  // (to prevent loading atom-package-deps and package.json when the deps are already loaded)\n  if (!atom.packages.isPackageLoaded('linter') || !atom.packages.isPackageLoaded('intentions')) {\n    // install if not installed\n    await (await import('atom-package-deps')).install('linter-ui-default', true); // enable if disabled\n\n    atom.notifications.addInfo(`Enabling package linter and intentions that are needed for \"linter-ui-default\"`);\n    atom.packages.enablePackage('linter');\n    atom.packages.enablePackage('intentions');\n  }\n}\n\nexport function deactivate() {\n  idleCallbacks.forEach(callbackID => window.cancelIdleCallback(callbackID));\n  idleCallbacks.clear();\n\n  for (const entry of instances) {\n    entry.dispose();\n  }\n\n  instances.clear();\n}\nexport function provideUI(): LinterUI {\n  const instance = new LinterUI();\n  instances.add(instance);\n\n  if (signalRegistry) {\n    instance.signal.attach(signalRegistry);\n  }\n\n  return instance;\n} // TODO: use IntentionsListProvider as the return type\n\nexport function provideIntentions(): Array<Intentions> {\n  return Array.from(instances).map(entry => entry.intentions);\n}\nexport function consumeSignal(signalService: BusySignalRegistry) {\n  signalRegistry = signalService;\n  instances.forEach(function (instance) {\n    instance.signal.attach((signalRegistry as BusySignalRegistry));\n  });\n}\nexport function consumeStatusBar(statusBarService: StatusBarRegistry) {\n  statusBarRegistry = statusBarService;\n  instances.forEach(function (instance) {\n    instance.statusBar.attach((statusBarRegistry as StatusBarRegistry));\n  });\n}","import { CompositeDisposable, Disposable, Emitter, Range } from 'atom';\nconst {\n  config,\n  workspace\n} = atom;\nimport { filterMessages, filterMessagesByRangeOrPoint } from '../helpers';\nimport type { LinterMessage } from '../types';\nexport default class PanelDelegate {\n  emitter = new Emitter<{}, {\n    'observe-messages': Array<LinterMessage>;\n  }>(); // eslint-disable-line @typescript-eslint/ban-types\n\n  messages: Array<LinterMessage> = [];\n  filteredMessages: Array<LinterMessage> = [];\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  panelRepresents?: 'Entire Project' | 'Current File' | 'Current Line';\n\n  constructor() {\n    let changeSubscription: Disposable | null = null;\n    this.subscriptions.add(config.observe('linter-ui-default.panelRepresents', (panelRepresents: PanelDelegate['panelRepresents']) => {\n      const notInitial = typeof this.panelRepresents !== 'undefined';\n      this.panelRepresents = panelRepresents;\n\n      if (notInitial) {\n        this.update();\n      }\n    }), workspace.getCenter().observeActivePaneItem(() => {\n      if (changeSubscription) {\n        changeSubscription.dispose();\n        changeSubscription = null;\n      }\n\n      const textEditor = workspace.getActiveTextEditor();\n\n      if (textEditor !== undefined) {\n        if (this.panelRepresents !== 'Entire Project') {\n          this.update();\n        }\n\n        let oldRow = -1;\n        changeSubscription = textEditor.onDidChangeCursorPosition(({\n          newBufferPosition\n        }) => {\n          if (oldRow !== newBufferPosition.row && this.panelRepresents === 'Current Line') {\n            oldRow = newBufferPosition.row;\n            this.update();\n          }\n        });\n      }\n\n      if (this.panelRepresents !== 'Entire Project' || textEditor !== undefined) {\n        this.update();\n      }\n    }), new Disposable(() => {\n      changeSubscription?.dispose();\n    }));\n  }\n\n  getFilteredMessages(): Array<LinterMessage> {\n    let filteredMessages: Array<LinterMessage> = [];\n\n    if (this.panelRepresents === 'Entire Project') {\n      filteredMessages = this.messages;\n    } else if (this.panelRepresents === 'Current File') {\n      const activeEditor = workspace.getActiveTextEditor();\n\n      if (!activeEditor) {\n        return [];\n      }\n\n      filteredMessages = filterMessages(this.messages, activeEditor.getPath());\n    } else if (this.panelRepresents === 'Current Line') {\n      const activeEditor = workspace.getActiveTextEditor();\n\n      if (!activeEditor) {\n        return [];\n      }\n\n      const activeLine = activeEditor.getCursors()[0].getBufferRow();\n      filteredMessages = filterMessagesByRangeOrPoint(this.messages, activeEditor.getPath(), Range.fromObject([[activeLine, 0], [activeLine, Infinity]]));\n    }\n\n    return filteredMessages;\n  }\n\n  update(messages: Array<LinterMessage> | null | undefined = null): void {\n    if (Array.isArray(messages)) {\n      this.messages = messages;\n    }\n\n    this.filteredMessages = this.getFilteredMessages();\n    this.emitter.emit('observe-messages', this.filteredMessages);\n  }\n\n  onDidChangeMessages(callback: (messages: Array<LinterMessage>) => void): Disposable {\n    return this.emitter.on('observe-messages', callback);\n  }\n\n  dispose() {\n    this.subscriptions.dispose();\n  }\n\n}","import { CompositeDisposable } from 'atom';\nconst {\n  config,\n  workspace\n} = atom;\nimport Delegate from './delegate';\nimport PanelDock from './dock';\nimport type { LinterMessage } from '../types';\nimport type { PaneContainer } from './dock';\nexport default class Panel {\n  panel: PanelDock | null = null;\n  element: HTMLElement = document.createElement('div');\n  delegate: Delegate = new Delegate();\n  messages: Array<LinterMessage> = [];\n  deactivating: boolean = false;\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  showPanelConfig: boolean = true;\n  hidePanelWhenEmpty: boolean = true;\n  showPanelStateMessages: boolean = false;\n  activationTimer: number;\n  initialized: boolean = false;\n\n  constructor() {\n    this.subscriptions.add(this.delegate, config.observe('linter-ui-default.hidePanelWhenEmpty', async (hidePanelWhenEmpty: boolean) => {\n      this.hidePanelWhenEmpty = hidePanelWhenEmpty;\n      await this.refresh();\n    }), workspace.onDidDestroyPane(({\n      pane: destroyedPane\n    }) => {\n      const isPaneItemDestroyed = this.panel !== null ? destroyedPane.getItems().includes(this.panel) : true;\n\n      if (isPaneItemDestroyed && !this.deactivating) {\n        this.panel = null;\n        config.set('linter-ui-default.showPanel', false);\n      }\n    }), workspace.onDidDestroyPaneItem(({\n      item: paneItem\n    }) => {\n      if (paneItem instanceof PanelDock && !this.deactivating) {\n        this.panel = null;\n        config.set('linter-ui-default.showPanel', false);\n      }\n    }), config.observe('linter-ui-default.showPanel', async (showPanel: boolean) => {\n      this.showPanelConfig = showPanel;\n      await this.refresh();\n    }), workspace.getCenter().observeActivePaneItem(async () => {\n      this.showPanelStateMessages = Boolean(this.delegate.filteredMessages.length);\n      await this.refresh();\n    }));\n    this.activationTimer = window.requestIdleCallback(async () => {\n      let firstTime = true;\n      const dock = workspace.getBottomDock();\n      this.subscriptions.add(dock.onDidChangeActivePaneItem(paneItem => {\n        if (!this.panel || this.getPanelLocation() !== 'bottom') {\n          return;\n        }\n\n        if (firstTime) {\n          firstTime = false;\n          return;\n        }\n\n        const isFocusIn = paneItem === this.panel;\n        const externallyToggled = isFocusIn !== this.showPanelConfig;\n\n        if (externallyToggled) {\n          config.set('linter-ui-default.showPanel', !this.showPanelConfig);\n        }\n      }), dock.onDidChangeVisible(visible => {\n        if (!this.panel || this.getPanelLocation() !== 'bottom') {\n          return;\n        }\n\n        if (!visible) {\n          // ^ When it's time to tell config to hide\n          if (this.showPanelConfig && this.hidePanelWhenEmpty && !this.showPanelStateMessages) {\n            // Ignore because we just don't have any messages to show, everything else is fine\n            return;\n          }\n        }\n\n        if (dock.getActivePaneItem() !== this.panel) {\n          // Ignore since the visibility of this panel is not changing\n          return;\n        }\n\n        const externallyToggled = visible !== this.showPanelConfig;\n\n        if (externallyToggled) {\n          config.set('linter-ui-default.showPanel', !this.showPanelConfig);\n        }\n      }));\n\n      if ((config.get('linter-ui-default.createPanelOnStart') as boolean)) {\n        await this.activate();\n      }\n\n      this.initialized = true;\n    });\n  }\n\n  private getPanelLocation() {\n    if (!this.panel) {\n      return null;\n    } // @ts-ignore internal API\n\n\n    const paneContainer: PaneContainer | undefined = workspace.paneContainerForItem(this.panel);\n    return paneContainer?.location;\n  }\n\n  async activate() {\n    if (this.panel) {\n      return;\n    }\n\n    this.panel = new PanelDock(this.delegate);\n    await workspace.open(this.panel, {\n      activatePane: false,\n      activateItem: false,\n      searchAllPanes: true\n    });\n    await this.update();\n    await this.refresh();\n  }\n\n  async update(newMessages: Array<LinterMessage> | null | undefined = null) {\n    if (newMessages) {\n      this.messages = newMessages;\n    }\n\n    this.delegate.update(this.messages);\n    this.showPanelStateMessages = Boolean(this.delegate.filteredMessages.length);\n    await this.refresh();\n  }\n\n  async refresh() {\n    if (!this.initialized) {\n      return;\n    }\n\n    const panel = this.panel;\n\n    if (panel === null) {\n      if (this.showPanelConfig) {\n        await this.activate();\n      }\n\n      return;\n    } // @ts-ignore internal API\n\n\n    const paneContainer: PaneContainer | undefined = workspace.paneContainerForItem(panel);\n\n    if (paneContainer?.location !== 'bottom') {\n      return;\n    }\n\n    const isActivePanel = paneContainer.getActivePaneItem() === panel;\n    const visibilityAllowed1 = this.showPanelConfig;\n    const visibilityAllowed2 = this.hidePanelWhenEmpty ? this.showPanelStateMessages : true;\n\n    if (visibilityAllowed1 && visibilityAllowed2) {\n      if (!isActivePanel) {\n        paneContainer.paneForItem(panel)?.activateItem(panel);\n      }\n\n      paneContainer.show();\n      panel.doPanelResize();\n    } else if (isActivePanel) {\n      paneContainer.hide();\n    }\n  }\n\n  dispose() {\n    this.deactivating = true;\n\n    if (this.panel) {\n      this.panel.dispose();\n    }\n\n    this.subscriptions.dispose();\n    window.cancelIdleCallback(this.activationTimer);\n  }\n\n}","import invariant from 'assert';\nimport { CompositeDisposable } from 'atom';\nconst {\n  config,\n  workspace,\n  commands,\n  clipboard\n} = atom;\nimport { $file, $range, visitMessage, sortMessages, sortSolutions, filterMessages, applySolution } from './helpers';\nimport type { LinterMessage, Message } from './types';\nexport default class Commands {\n  messages: Array<LinterMessage> = [];\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n\n  constructor() {\n    this.subscriptions.add(commands.add('atom-workspace', {\n      'linter-ui-default:next': () => this.move(true, true),\n      'linter-ui-default:previous': () => this.move(false, true),\n      'linter-ui-default:next-error': () => this.move(true, true, 'error'),\n      'linter-ui-default:previous-error': () => this.move(false, true, 'error'),\n      'linter-ui-default:next-warning': () => this.move(true, true, 'warning'),\n      'linter-ui-default:previous-warning': () => this.move(false, true, 'warning'),\n      'linter-ui-default:next-info': () => this.move(true, true, 'info'),\n      'linter-ui-default:previous-info': () => this.move(false, true, 'info'),\n      'linter-ui-default:next-in-current-file': () => this.move(true, false),\n      'linter-ui-default:previous-in-current-file': () => this.move(false, false),\n      'linter-ui-default:next-error-in-current-file': () => this.move(true, false, 'error'),\n      'linter-ui-default:previous-error-in-current-file': () => this.move(false, false, 'error'),\n      'linter-ui-default:next-warning-in-current-file': () => this.move(true, false, 'warning'),\n      'linter-ui-default:previous-warning-in-current-file': () => this.move(false, false, 'warning'),\n      'linter-ui-default:next-info-in-current-file': () => this.move(true, false, 'info'),\n      'linter-ui-default:previous-info-in-current-file': () => this.move(false, false, 'info'),\n      'linter-ui-default:toggle-panel': () => togglePanel(),\n\n      // NOTE: Add no-ops here so they are recognized by commands registry\n      // Real commands are registered when tooltip is shown inside tooltip's delegate\n      'linter-ui-default:expand-tooltip'() {\n        /* no operation */\n      },\n\n      'linter-ui-default:collapse-tooltip'() {\n        /* no operation */\n      }\n\n    }), commands.add('atom-text-editor:not([mini])', {\n      'linter-ui-default:apply-all-solutions': () => this.applyAllSolutions()\n    }), commands.add('#linter-panel', {\n      'core:copy': () => {\n        const selection = document.getSelection();\n\n        if (selection) {\n          clipboard.write(selection.toString());\n        }\n      }\n    }));\n  } // NOTE: Apply solutions from bottom to top, so they don't invalidate each other\n  // NOTE: This only apply the solutions that are not async\n\n\n  applyAllSolutions(): void {\n    const textEditor = workspace.getActiveTextEditor();\n    invariant(textEditor !== undefined, 'textEditor was null on a command supposed to run on text-editors only');\n    const messages = sortMessages(filterMessages(this.messages, textEditor.getPath()), ['line', 'desc']);\n    messages.forEach(function (message) {\n      if (message.version === 2 && Array.isArray(message.solutions) && message.solutions.length > 0) {\n        applySolution(textEditor, sortSolutions(message.solutions)[0]);\n      }\n    });\n  }\n\n  async move(forward: boolean, globally: boolean, severity: string | null | undefined = null) {\n    const currentEditor = workspace.getActiveTextEditor();\n    const currentFile: any = currentEditor?.getPath() ?? NaN; // NOTE: ^ Setting default to NaN so it won't match empty file paths in messages\n\n    const messages = sortMessages(filterMessages(this.messages, globally ? null : currentFile, severity), ['file', 'asc']);\n    const expectedValue = forward ? -1 : 1;\n\n    if (!currentEditor) {\n      const message = forward ? messages[0] : messages[messages.length - 1];\n\n      if (message) {\n        await visitMessage(message);\n      }\n\n      return;\n    }\n\n    const currentPosition = currentEditor.getCursorBufferPosition(); // NOTE: Iterate bottom to top to find the previous message\n    // Because if we search top to bottom when sorted, first item will always\n    // be the smallest\n\n    if (!forward) {\n      messages.reverse();\n    }\n\n    let found: Message | null = null;\n    let currentFileEncountered = false;\n\n    for (let i = 0, length = messages.length; i < length; i++) {\n      const message = messages[i];\n      const messageFile = $file(message);\n      const messageRange = $range(message);\n\n      if (!currentFileEncountered && messageFile === currentFile) {\n        currentFileEncountered = true;\n      }\n\n      if (typeof messageFile === 'string' && messageRange) {\n        if (currentFileEncountered && messageFile !== currentFile) {\n          found = message;\n          break;\n        } else if (messageFile === currentFile && currentPosition.compare(messageRange.start) === expectedValue) {\n          found = message;\n          break;\n        }\n      }\n    }\n\n    if (!found && messages.length) {\n      // Reset back to first or last depending on direction\n      found = messages[0];\n    }\n\n    if (found) {\n      await visitMessage(found);\n    }\n  }\n\n  update(messages: Array<LinterMessage>) {\n    this.messages = messages;\n  }\n\n  dispose(): void {\n    this.subscriptions.dispose();\n  }\n\n}\n\nfunction togglePanel(): void {\n  config.set('linter-ui-default.showPanel', !(config.get('linter-ui-default.showPanel') as boolean));\n}","import { CompositeDisposable, Emitter } from 'atom';\nconst {\n  tooltips\n} = atom;\nimport type { Disposable } from 'atom';\nimport * as Helpers from './helpers';\nexport default class Element {\n  item: HTMLElement = document.createElement('div');\n  itemErrors: HTMLElement = Helpers.getElement('stop');\n  itemWarnings: HTMLElement = Helpers.getElement('alert');\n  itemInfos: HTMLElement = Helpers.getElement('info');\n  emitter = new Emitter<{}, {\n    click: 'error' | 'warning' | 'info';\n  }>(); // eslint-disable-line @typescript-eslint/ban-types\n\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n\n  constructor() {\n    this.item.appendChild(this.itemErrors);\n    this.item.appendChild(this.itemWarnings);\n    this.item.appendChild(this.itemInfos);\n    this.item.classList.add('inline-block');\n    this.item.classList.add('linter-status-count');\n    this.subscriptions.add(this.emitter, tooltips.add(this.itemErrors, {\n      title: 'Linter Errors'\n    }), tooltips.add(this.itemWarnings, {\n      title: 'Linter Warnings'\n    }), tooltips.add(this.itemInfos, {\n      title: 'Linter Infos'\n    }));\n\n    this.itemErrors.onclick = () => this.emitter.emit('click', 'error');\n\n    this.itemWarnings.onclick = () => this.emitter.emit('click', 'warning');\n\n    this.itemInfos.onclick = () => this.emitter.emit('click', 'info');\n\n    this.update(0, 0, 0);\n  }\n\n  setVisibility(prefix: string, visibility: boolean) {\n    if (visibility) {\n      this.item.classList.remove(`hide-${prefix}`);\n    } else {\n      this.item.classList.add(`hide-${prefix}`);\n    }\n  }\n\n  update(countErrors: number, countWarnings: number, countInfos: number): void {\n    this.itemErrors.childNodes[0].textContent = String(countErrors);\n    this.itemWarnings.childNodes[0].textContent = String(countWarnings);\n    this.itemInfos.childNodes[0].textContent = String(countInfos);\n\n    if (countErrors) {\n      this.itemErrors.classList.add('text-error');\n    } else {\n      this.itemErrors.classList.remove('text-error');\n    }\n\n    if (countWarnings) {\n      this.itemWarnings.classList.add('text-warning');\n    } else {\n      this.itemWarnings.classList.remove('text-warning');\n    }\n\n    if (countInfos) {\n      this.itemInfos.classList.add('text-info');\n    } else {\n      this.itemInfos.classList.remove('text-info');\n    }\n  }\n\n  onDidClick(callback: (type: 'error' | 'warning' | 'info') => void): Disposable {\n    return this.emitter.on('click', callback);\n  }\n\n  dispose() {\n    this.subscriptions.dispose();\n  }\n\n}","import { CompositeDisposable, Disposable } from 'atom';\nconst {\n  config,\n  workspace,\n  views,\n  commands\n} = atom;\nimport type { StatusBar as StatusBarRegistry, Tile as StatusBarTile } from 'atom/status-bar';\nimport Element from './element';\nimport { $file } from '../helpers';\nimport type { LinterMessage } from '../types';\nexport default class StatusBar {\n  element: Element = new Element();\n  messages: Array<LinterMessage> = [];\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  statusBarRepresents?: 'Entire Project' | 'Current File';\n  statusBarClickBehavior?: 'Toggle Panel' | 'Jump to next issue' | 'Toggle Status Bar Scope';\n\n  constructor() {\n    this.subscriptions.add(this.element, config.observe('linter-ui-default.statusBarRepresents', (statusBarRepresents: StatusBar['statusBarRepresents']) => {\n      const notInitial = typeof this.statusBarRepresents !== 'undefined';\n      this.statusBarRepresents = statusBarRepresents;\n\n      if (notInitial) {\n        this.update();\n      }\n    }), config.observe('linter-ui-default.statusBarClickBehavior', (statusBarClickBehavior: StatusBar['statusBarClickBehavior']) => {\n      const notInitial = typeof this.statusBarClickBehavior !== 'undefined';\n      this.statusBarClickBehavior = statusBarClickBehavior;\n\n      if (notInitial) {\n        this.update();\n      }\n    }), config.observe('linter-ui-default.showStatusBar', (showStatusBar: boolean) => {\n      this.element.setVisibility('config', showStatusBar);\n    }), workspace.getCenter().observeActivePaneItem(paneItem => {\n      const isTextEditor = workspace.isTextEditor(paneItem);\n      this.element.setVisibility('pane', isTextEditor);\n\n      if (isTextEditor && this.statusBarRepresents === 'Current File') {\n        this.update();\n      }\n    }));\n    this.element.onDidClick(async type => {\n      const workspaceView = views.getView(workspace);\n\n      if (this.statusBarClickBehavior === 'Toggle Panel') {\n        await commands.dispatch(workspaceView, 'linter-ui-default:toggle-panel');\n      } else if (this.statusBarClickBehavior === 'Toggle Status Bar Scope') {\n        config.set('linter-ui-default.statusBarRepresents', this.statusBarRepresents === 'Entire Project' ? 'Current File' : 'Entire Project');\n      } else {\n        const postfix = this.statusBarRepresents === 'Current File' ? '-in-current-file' : '';\n        await commands.dispatch(workspaceView, `linter-ui-default:next-${type}${postfix}`);\n      }\n    });\n  }\n\n  update(messages?: Array<LinterMessage>): void {\n    if (messages !== undefined) {\n      this.messages = messages;\n    } else {\n      messages = this.messages;\n    }\n\n    const count = {\n      error: 0,\n      warning: 0,\n      info: 0\n    };\n    const currentTextEditor = workspace.getActiveTextEditor();\n    const currentPath = currentTextEditor?.getPath() ?? NaN; // NOTE: ^ Setting default to NaN so it won't match empty file paths in messages\n\n    messages.forEach(message => {\n      if (this.statusBarRepresents === 'Entire Project' || $file(message) === currentPath) {\n        if (message.severity === 'error') {\n          count.error++;\n        } else if (message.severity === 'warning') {\n          count.warning++;\n        } else {\n          count.info++;\n        }\n      }\n    });\n    this.element.update(count.error, count.warning, count.info);\n  }\n\n  attach(statusBarRegistry: StatusBarRegistry) {\n    let statusBar: StatusBarTile | null = null;\n    this.subscriptions.add(config.observe('linter-ui-default.statusBarPosition', statusBarPosition => {\n      if (statusBar) {\n        statusBar.destroy();\n      }\n\n      statusBar = statusBarRegistry[`add${statusBarPosition}Tile`]({\n        item: this.element.item,\n        priority: statusBarPosition === 'Left' ? 0 : 1000\n      });\n    }));\n    this.subscriptions.add(new Disposable(function () {\n      if (statusBar) {\n        statusBar.destroy();\n      }\n    }));\n  }\n\n  dispose() {\n    this.subscriptions.dispose();\n  }\n\n}","import { CompositeDisposable } from 'atom';\nconst {\n  config,\n  project\n} = atom;\nimport type { Linter } from './types';\nimport { BusySignalProvider, BusySignalRegistry } from 'atom-ide-base';\nexport default class BusySignal {\n  provider: BusySignalProvider | null | undefined;\n  executing: Set<{\n    linter: Linter;\n    filePath: string | null | undefined;\n  }> = new Set();\n  providerTitles: Set<string> = new Set();\n  useBusySignal: boolean = true;\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n\n  constructor() {\n    this.subscriptions.add(config.observe('linter-ui-default.useBusySignal', (useBusySignal: boolean) => {\n      this.useBusySignal = useBusySignal;\n    }));\n  }\n\n  attach(registry: BusySignalRegistry) {\n    this.provider = registry.create();\n    this.update();\n  }\n\n  update() {\n    const provider = this.provider;\n\n    if (!provider) {\n      return;\n    }\n\n    if (!this.useBusySignal) {\n      return;\n    }\n\n    const fileMap: Map<string | null | undefined, Array<string>> = new Map();\n    const currentTitles = new Set();\n\n    for (const {\n      filePath,\n      linter\n    } of this.executing) {\n      let names = fileMap.get(filePath);\n\n      if (!names) {\n        fileMap.set(filePath, names = []);\n      }\n\n      names.push(linter.name);\n    }\n\n    for (const [filePath, names] of fileMap) {\n      const path = typeof filePath === 'string' ? ` on ${project.relativizePath(filePath)[1]}` : '';\n      names.forEach(name => {\n        const title = `${name}${path}`;\n        currentTitles.add(title);\n\n        if (!this.providerTitles.has(title)) {\n          // Add the title since it hasn't been seen before\n          this.providerTitles.add(title);\n          provider.add(title);\n        }\n      });\n    } // Remove any titles no longer active\n\n\n    this.providerTitles.forEach(title => {\n      if (!currentTitles.has(title)) {\n        provider.remove(title);\n        this.providerTitles.delete(title);\n      }\n    });\n    fileMap.clear();\n  }\n\n  getExecuting(linter: Linter, filePath: string | null | undefined) {\n    for (const entry of this.executing) {\n      if (entry.linter === linter && entry.filePath === filePath) {\n        return entry;\n      }\n    }\n\n    return null;\n  }\n\n  didBeginLinting(linter: Linter, filePath: string | null | undefined) {\n    if (this.getExecuting(linter, filePath)) {\n      return;\n    }\n\n    this.executing.add({\n      linter,\n      filePath\n    });\n    this.update();\n  }\n\n  didFinishLinting(linter: Linter, filePath: string | null | undefined) {\n    const entry = this.getExecuting(linter, filePath);\n\n    if (entry) {\n      this.executing.delete(entry);\n      this.update();\n    }\n  }\n\n  dispose() {\n    if (this.provider) {\n      this.provider.clear();\n    }\n\n    this.providerTitles.clear();\n    this.executing.clear();\n    this.subscriptions.dispose();\n  }\n\n}","import { $range, applySolution, filterMessages } from './helpers';\nimport type { LinterMessage, ListItem, MessageSolution } from './types';\nimport type { TextEditor, Point } from 'atom';\nexport default class Intentions {\n  messages: Array<LinterMessage> = [];\n  grammarScopes: Array<string> = ['*'];\n\n  getIntentions({\n    textEditor,\n    bufferPosition\n  }: {\n    textEditor: TextEditor;\n    bufferPosition: Point;\n  }) {\n    let intentions: ListItem[] = [];\n    const messages = filterMessages(this.messages, textEditor.getPath());\n\n    for (const message of messages) {\n      const messageSolutions = message.solutions;\n      const hasArrayFixes = Array.isArray(messageSolutions) && messageSolutions.length > 0;\n\n      if (!hasArrayFixes && typeof messageSolutions !== 'function') {\n        // if it doesn't have solutions then continue\n        continue;\n      }\n\n      const range = $range(message);\n\n      if (range?.containsPoint(bufferPosition) !== true) {\n        // if not in range then continue\n        continue;\n      }\n\n      const linterName = message.linterName || 'Linter';\n\n      if (message.version === 2) {\n        if (hasArrayFixes) {\n          intentions = intentions.concat((messageSolutions as MessageSolution[]).map(solution => ({\n            priority: typeof solution.priority === 'number' ? solution.priority + 200 : 200,\n            icon: 'tools',\n            title: solution.title ?? `Fix ${linterName} issue`,\n\n            selected() {\n              applySolution(textEditor, solution);\n            }\n\n          })));\n        }\n      }\n    }\n\n    return intentions;\n  }\n\n  update(messages: Array<LinterMessage>) {\n    this.messages = messages;\n  }\n\n}","import { CompositeDisposable, Emitter } from 'atom';\nconst {\n  config,\n  workspace,\n  views,\n  commands\n} = atom;\nimport type { Disposable } from 'atom';\nimport { CommandEventExtra } from '../types';\nexport default class TooltipDelegate {\n  emitter: Emitter = new Emitter<{\n    'should-update': never;\n    'should-expand': never;\n    'should-collapse': never;\n  }>();\n  expanded: boolean = false;\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  showProviderName?: boolean;\n\n  constructor() {\n    this.subscriptions.add(this.emitter, config.observe('linter-ui-default.showProviderName', (showProviderName: boolean) => {\n      const shouldUpdate = typeof this.showProviderName !== 'undefined';\n      this.showProviderName = showProviderName;\n\n      if (shouldUpdate) {\n        this.emitter.emit('should-update');\n      }\n    }), commands.add('atom-workspace', {\n      'linter-ui-default:expand-tooltip': (event: CommandEventExtra) => {\n        if (this.expanded) {\n          return;\n        }\n\n        this.expanded = true;\n        this.emitter.emit('should-expand'); // If bound to a key, collapse when that key is released, just like old times\n\n        if (event.originalEvent?.isTrusted === true) {\n          // $FlowIgnore: document.body is never null\n          document.body.addEventListener('keyup', async function eventListener() {\n            // $FlowIgnore: document.body is never null\n            document.body.removeEventListener('keyup', eventListener);\n            await commands.dispatch(views.getView(workspace), 'linter-ui-default:collapse-tooltip');\n          }, {\n            passive: true\n          });\n        }\n      },\n      'linter-ui-default:collapse-tooltip': () => {\n        this.expanded = false;\n        this.emitter.emit('should-collapse');\n      }\n    }));\n  }\n\n  onShouldUpdate(callback: () => void): Disposable {\n    return this.emitter.on('should-update', callback);\n  }\n\n  onShouldExpand(callback: () => void): Disposable {\n    return this.emitter.on('should-expand', callback);\n  }\n\n  onShouldCollapse(callback: () => void): Disposable {\n    return this.emitter.on('should-collapse', callback);\n  }\n\n  dispose() {\n    this.emitter.dispose();\n  }\n\n}","module.exports = (Promise.resolve(__parcel__require__(\"./\" + \"marked.esm.ab6d9469.js\"))).then(() => parcelRequire('1o0DF'));","import { debounce, $range, filterMessagesByRangeOrPoint } from '../helpers';\nimport disposableEvent from 'disposable-event';\nimport { TargetWithAddEventListener } from 'disposable-event/src/target';\nimport { CompositeDisposable, Disposable, Emitter, Range, CursorPositionChangedEvent } from 'atom';\nconst {\n  config,\n  views\n} = atom;\ntype CompositeDisposableType = CompositeDisposable & {\n  disposed: boolean;\n}; // $FlowIgnore: Cursor is a type\n\nimport type { TextEditor, DisplayMarker, Marker, Gutter, Point, Cursor } from 'atom';\nimport Tooltip from '../tooltip';\nimport { hasParent, mouseEventNearPosition, getBufferPositionFromMouseEvent } from './helpers';\nimport type { LinterMessage } from '../types';\nexport default class Editor {\n  textEditor: TextEditor;\n  gutter: Gutter | null = null;\n  tooltip: Tooltip | null = null;\n  emitter = new Emitter<{\n    'did-destroy': never;\n  }>();\n  markers = new Map<string, Array<DisplayMarker | Marker>>();\n  messages = new Map<string, LinterMessage>();\n  showTooltip: boolean = true;\n  subscriptions = (new CompositeDisposable() as CompositeDisposableType);\n  cursorPosition: Point | null = null;\n  gutterPosition?: string;\n  tooltipFollows: string = 'Both';\n  showDecorations?: boolean;\n  showProviderName: boolean = true;\n  ignoreTooltipInvocation: boolean = false;\n  currentLineMarker: DisplayMarker | null = null;\n  lastRange?: Range;\n  lastIsEmpty?: boolean;\n  lastCursorPositions = new WeakMap<Cursor, Point>();\n\n  constructor(textEditor: TextEditor) {\n    this.textEditor = textEditor;\n    let tooltipSubscription: CompositeDisposable | null = null;\n    this.subscriptions.add(this.emitter, textEditor.onDidDestroy(() => {\n      this.dispose();\n    }), new Disposable(function () {\n      tooltipSubscription?.dispose();\n    }), // configs\n    config.observe('linter-ui-default.showProviderName', (showProviderName: boolean) => {\n      this.showProviderName = showProviderName;\n    }), config.observe('linter-ui-default.showDecorations', (showDecorations: boolean) => {\n      const notInitial = typeof this.showDecorations !== 'undefined';\n      this.showDecorations = showDecorations;\n\n      if (notInitial) {\n        this.updateGutter();\n      }\n    }), // gutter config\n    config.observe('linter-ui-default.gutterPosition', (gutterPosition: string | undefined) => {\n      const notInitial = typeof this.gutterPosition !== 'undefined';\n      this.gutterPosition = gutterPosition;\n\n      if (notInitial) {\n        this.updateGutter();\n      }\n    }), // tooltip config\n    config.observe('linter-ui-default.showTooltip', (showTooltip: boolean) => {\n      this.showTooltip = showTooltip;\n\n      if (!showTooltip && this.tooltip !== null) {\n        this.removeTooltip();\n      }\n    }), config.observe('linter-ui-default.tooltipFollows', (tooltipFollows: string) => {\n      this.tooltipFollows = tooltipFollows;\n      tooltipSubscription?.dispose();\n      tooltipSubscription = new CompositeDisposable();\n\n      if (tooltipFollows === 'Mouse' || tooltipFollows === 'Both') {\n        tooltipSubscription.add(this.listenForMouseMovement());\n      }\n\n      if (tooltipFollows === 'Keyboard' || tooltipFollows === 'Both') {\n        tooltipSubscription.add(this.listenForKeyboardMovement());\n      }\n\n      this.removeTooltip();\n    }), // cursor position change\n    textEditor.onDidChangeCursorPosition(({\n      cursor,\n      newBufferPosition\n    }) => {\n      const lastBufferPosition = this.lastCursorPositions.get(cursor);\n\n      if (lastBufferPosition === undefined || !lastBufferPosition.isEqual(newBufferPosition)) {\n        this.lastCursorPositions.set(cursor, newBufferPosition);\n        this.ignoreTooltipInvocation = false;\n      }\n\n      if (this.tooltipFollows === 'Mouse') {\n        this.removeTooltip();\n      }\n    }), // text change\n    textEditor.getBuffer().onDidChangeText(() => {\n      const cursors = textEditor.getCursors();\n\n      for (const cursor of cursors) {\n        this.lastCursorPositions.set(cursor, cursor.getBufferPosition());\n      }\n\n      if (this.tooltipFollows !== 'Mouse') {\n        this.ignoreTooltipInvocation = true;\n        this.removeTooltip();\n      }\n    }));\n    this.updateGutter();\n    this.listenForCurrentLine();\n  }\n\n  listenForCurrentLine() {\n    this.subscriptions.add(this.textEditor.observeCursors(cursor => {\n      const handlePositionChange = ({\n        start,\n        end\n      }: {\n        start: Point;\n        end: Point;\n      }) => {\n        const gutter = this.gutter;\n\n        if (gutter === null || this.subscriptions.disposed) {\n          return;\n        } // We need that Range.fromObject hack below because when we focus index 0 on multi-line selection\n        // end.column is the column of the last line but making a range out of two and then accesing\n        // the end seems to fix it (black magic?)\n\n\n        const currentRange = Range.fromObject([start, end]);\n        const linesRange = Range.fromObject([[start.row, 0], [end.row, Infinity]]);\n        const currentIsEmpty = currentRange.isEmpty(); // NOTE: Atom does not paint gutter if multi-line and last line has zero index\n\n        if (start.row !== end.row && currentRange.end.column === 0) {\n          linesRange.end.row--;\n        }\n\n        if (this.lastRange?.isEqual(linesRange) === true && currentIsEmpty === this.lastIsEmpty) {\n          return;\n        }\n\n        if (this.currentLineMarker) {\n          this.currentLineMarker.destroy();\n          this.currentLineMarker = null;\n        }\n\n        this.lastRange = linesRange;\n        this.lastIsEmpty = currentIsEmpty;\n        this.currentLineMarker = this.textEditor.markScreenRange(linesRange, {\n          invalidate: 'never'\n        });\n        const item = document.createElement('span');\n        item.className = `line-number cursor-line linter-cursor-line ${currentIsEmpty ? 'cursor-line-no-selection' : ''}`;\n        gutter.decorateMarker(this.currentLineMarker, {\n          item,\n          class: 'linter-row'\n        });\n      };\n\n      const cursorMarker = cursor.getMarker();\n      const subscriptions = new CompositeDisposable();\n      subscriptions.add(cursorMarker.onDidChange(({\n        newHeadScreenPosition,\n        newTailScreenPosition\n      }) => {\n        handlePositionChange({\n          start: newHeadScreenPosition,\n          end: newTailScreenPosition\n        });\n      }), cursor.onDidDestroy(() => {\n        this.subscriptions.remove(subscriptions);\n        subscriptions.dispose();\n      }), new Disposable(() => {\n        if (this.currentLineMarker) {\n          this.currentLineMarker.destroy();\n          this.currentLineMarker = null;\n        }\n      }));\n      this.subscriptions.add(subscriptions);\n      handlePositionChange(cursorMarker.getScreenRange());\n    }));\n  }\n\n  listenForMouseMovement() {\n    const editorElement = views.getView(this.textEditor);\n    return disposableEvent(((editorElement as unknown) as TargetWithAddEventListener), 'mousemove', debounce((event: MouseEvent) => {\n      if (this.subscriptions.disposed || !hasParent((event.target as HTMLElement | null), 'div.scroll-view')) {\n        return;\n      }\n\n      const tooltip = this.tooltip;\n\n      if (tooltip !== null && mouseEventNearPosition({\n        event,\n        editor: this.textEditor,\n        editorElement,\n        tooltipElement: tooltip.element,\n        screenPosition: tooltip.marker.getStartScreenPosition()\n      })) {\n        return;\n      }\n\n      this.cursorPosition = getBufferPositionFromMouseEvent(event, this.textEditor, editorElement);\n      this.ignoreTooltipInvocation = false;\n\n      if (this.cursorPosition) {\n        this.updateTooltip(this.cursorPosition);\n      } else {\n        this.removeTooltip();\n      }\n    }, 100), {\n      passive: true\n    });\n  }\n\n  listenForKeyboardMovement() {\n    return this.textEditor.onDidChangeCursorPosition(debounce(({\n      newBufferPosition\n    }: CursorPositionChangedEvent) => {\n      this.cursorPosition = newBufferPosition;\n      this.updateTooltip(newBufferPosition);\n    }, 16));\n  }\n\n  updateGutter() {\n    this.removeGutter();\n\n    if (this.showDecorations !== true) {\n      this.gutter = null;\n      return;\n    }\n\n    const priority = this.gutterPosition === 'Left' ? -100 : 100;\n    this.gutter = this.textEditor.addGutter({\n      name: 'linter-ui-default',\n      priority\n    });\n\n    for (const [key, markers] of this.markers) {\n      const message = this.messages.get(key);\n\n      if (message) {\n        for (const marker of markers) {\n          this.decorateMarker(message, marker, 'gutter');\n        }\n      }\n    }\n  }\n\n  removeGutter() {\n    if (this.gutter) {\n      try {\n        this.gutter.destroy();\n      } catch (_) {\n        /* This throws when the text editor is disposed */\n      }\n    }\n  }\n\n  updateTooltip(position: Point | null | undefined) {\n    if (!position || this.tooltip?.isValid(position, this.messages) === true) {\n      return;\n    }\n\n    this.removeTooltip();\n\n    if (!this.showTooltip) {\n      return;\n    }\n\n    if (this.ignoreTooltipInvocation) {\n      return;\n    }\n\n    const messages = filterMessagesByRangeOrPoint(this.messages, this.textEditor.getPath(), position);\n\n    if (messages.length === 0) {\n      return;\n    }\n\n    this.tooltip = new Tooltip(messages, position, this.textEditor);\n    const tooltipMarker = this.tooltip.marker; // save markers of the tooltip (for destorying them in this.applyChanges)\n\n    for (const message of messages) {\n      this.saveMarker(message.key, tooltipMarker);\n    } // $FlowIgnore: this.tooltip is not null\n\n\n    this.tooltip.onDidDestroy(() => {\n      this.tooltip = null;\n    });\n  }\n\n  removeTooltip() {\n    this.tooltip?.marker.destroy();\n  }\n\n  applyChanges(added: Array<LinterMessage>, removed: Array<LinterMessage>) {\n    const textBuffer = this.textEditor.getBuffer();\n\n    for (let i = 0, length = removed.length; i < length; i++) {\n      const message = removed[i];\n      this.destroyMarker(message.key);\n    }\n\n    for (let i = 0, length = added.length; i < length; i++) {\n      const message = added[i];\n      const markerRange = $range(message);\n\n      if (!markerRange) {\n        // Only for backward compatibility\n        continue;\n      } // TODO this marker is Marker no DisplayMarker!!\n\n\n      const marker: Marker = textBuffer.markRange(markerRange, {\n        invalidate: 'never'\n      });\n      this.decorateMarker(message, marker);\n      marker.onDidChange(({\n        oldHeadPosition,\n        newHeadPosition,\n        isValid\n      }) => {\n        if (!isValid || newHeadPosition.row === 0 && oldHeadPosition.row !== 0) {\n          return;\n        }\n\n        if (message.version === 2) {\n          message.location.position = marker.previousEventState.range;\n        }\n      });\n    }\n\n    this.updateTooltip(this.cursorPosition);\n  }\n\n  decorateMarker(message: LinterMessage, marker: DisplayMarker | Marker, paint: 'gutter' | 'editor' | 'both' = 'both') {\n    this.saveMarker(message.key, marker);\n    this.messages.set(message.key, message);\n\n    if (paint === 'both' || paint === 'editor') {\n      this.textEditor.decorateMarker(marker, {\n        type: 'text',\n        class: `linter-highlight linter-${message.severity}`\n      });\n    }\n\n    const gutter = this.gutter;\n\n    if (gutter && (paint === 'both' || paint === 'gutter')) {\n      const element = document.createElement('span');\n      element.className = `linter-gutter linter-gutter-${message.severity} icon icon-${message.icon ?? 'primitive-dot'}`;\n      gutter.decorateMarker(marker, {\n        class: 'linter-row',\n        item: element\n      });\n    }\n  } // add marker to the message => marker map\n\n\n  saveMarker(key: string, marker: DisplayMarker | Marker) {\n    const allMarkers = this.markers.get(key) ?? [];\n    allMarkers.push(marker);\n    this.markers.set(key, allMarkers);\n  } // destroy markers of a key\n\n\n  destroyMarker(key: string) {\n    const markers = this.markers.get(key);\n\n    if (markers) {\n      for (const marker of markers) {\n        marker?.destroy();\n      }\n    }\n\n    this.markers.delete(key);\n    this.messages.delete(key);\n  }\n\n  onDidDestroy(callback: () => void) {\n    return this.emitter.on('did-destroy', callback);\n  }\n\n  dispose() {\n    this.emitter.emit('did-destroy');\n    this.subscriptions.dispose();\n    this.removeGutter();\n    this.removeTooltip();\n  }\n\n}","import type { Point, TextEditor, TextEditorElement, PointLike } from 'atom';\nimport type Tooltip from '../tooltip/index';\nconst TOOLTIP_WIDTH_HIDE_OFFSET = 30;\nexport function getBufferPositionFromMouseEvent(event: MouseEvent, editor: TextEditor, editorElement: TextEditorElement): Point | null {\n  const editorComponent = editorElement.getComponent();\n  const pixelPosition = editorComponent.pixelPositionForMouseEvent(event);\n  const screenPosition = editorComponent.screenPositionForPixelPosition(pixelPosition);\n\n  if (Number.isNaN(screenPosition.row) || Number.isNaN(screenPosition.column)) {\n    return null;\n  } // ^ Workaround for NaN bug steelbrain/linter-ui-default#191\n\n\n  const expectedPixelPosition = editorElement.pixelPositionForScreenPosition(screenPosition);\n  const differenceTop = pixelPosition.top - expectedPixelPosition.top;\n  const differenceLeft = pixelPosition.left - expectedPixelPosition.left; // Only allow offset of 20px - Fixes steelbrain/linter-ui-default#63\n\n  if ((differenceTop === 0 || differenceTop > 0 && differenceTop < 20 || differenceTop < 0 && differenceTop > -20) && (differenceLeft === 0 || differenceLeft > 0 && differenceLeft < 20 || differenceLeft < 0 && differenceLeft > -20)) {\n    return editor.bufferPositionForScreenPosition(screenPosition);\n  }\n\n  return null;\n}\nexport function mouseEventNearPosition({\n  event,\n  editor,\n  editorElement,\n  tooltipElement,\n  screenPosition\n}: {\n  event: {\n    clientX: number;\n    clientY: number;\n  };\n  editor: TextEditor;\n  editorElement: TextEditorElement;\n  tooltipElement: Tooltip['element'];\n  screenPosition: PointLike;\n}): boolean {\n  const pixelPosition = editorElement.getComponent().pixelPositionForMouseEvent(event);\n  const expectedPixelPosition = editorElement.pixelPositionForScreenPosition(screenPosition);\n  const differenceTop = pixelPosition.top - expectedPixelPosition.top;\n  const differenceLeft = pixelPosition.left - expectedPixelPosition.left;\n  const editorLineHeight = editor.getLineHeightInPixels();\n  const elementHeight = tooltipElement.offsetHeight + editorLineHeight;\n  const elementWidth = tooltipElement.offsetWidth;\n\n  if (\n  /* Cursor is below the line*/\n  differenceTop > 0 && differenceTop > elementHeight + 1.5 * editorLineHeight ||\n  /* Cursor is above the line */\n  differenceTop < 0 && differenceTop < -1.5 * editorLineHeight ||\n  /* Right of the start of highlight */\n  differenceLeft > 0 && differenceLeft > elementWidth + TOOLTIP_WIDTH_HIDE_OFFSET ||\n  /* Left of start of highlight */\n  differenceTop < 0 && differenceLeft < -1 * TOOLTIP_WIDTH_HIDE_OFFSET) {\n    return false;\n  }\n\n  return true;\n}\nexport function hasParent(givenElement: HTMLElement | null, selector: string): boolean {\n  let element: HTMLElement | null = givenElement;\n\n  if (element === null) {\n    return false;\n  }\n\n  do {\n    if (element.matches(selector)) {\n      return true;\n    }\n\n    element = element.parentElement;\n  } while (element !== null && element.nodeName !== 'HTML');\n\n  return false;\n}","import { CompositeDisposable } from 'atom';\nconst {\n  config,\n  workspace,\n  notifications\n} = atom;\nimport type { TextEditor } from 'atom';\nimport Editor from './editor';\nimport { $file, getEditorsMap, filterMessages } from './helpers';\nimport { largeness } from 'atom-ide-base/commons-atom/editor-largeness';\nimport type { LinterMessage, MessagesPatch } from './types';\nexport type EditorsPatch = {\n  added: Array<LinterMessage>;\n  removed: Array<LinterMessage>;\n  editors: Array<Editor>;\n};\nexport type EditorsMap = Map<string, EditorsPatch>;\nexport default class Editors {\n  editors: Set<Editor> = new Set();\n  messages: Array<LinterMessage> = [];\n  firstRender: boolean = true;\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n\n  constructor() {\n    // TODO move the config to a separate package\n    const largeLineCount = (config.get('linter-ui-default.largeFileLineCount') as number);\n    const longLineLength = (config.get('linter-ui-default.longLineLength') as number);\n    this.subscriptions.add(workspace.observeTextEditors(textEditor => {\n      // TODO we do this check only at the begining. Probably we should do this later too?\n      if (largeness(textEditor, largeLineCount, longLineLength)) {\n        const notif = notifications.addWarning('Linter: Large/Minified file detected', {\n          detail: 'Adding inline linter markers are skipped for this file for performance reasons (linter pane is still active)',\n          dismissable: true,\n          buttons: [{\n            text: 'Force enable',\n            onDidClick: () => {\n              this.getEditor(textEditor);\n              notif.dismiss();\n            }\n          }, {\n            text: 'Change threshold',\n            onDidClick: async () => {\n              await workspace.open('atom://config/packages/linter-ui-default'); // it is the 16th setting :D\n\n              document.querySelectorAll('.control-group')[16].scrollIntoView();\n              notif.dismiss();\n            }\n          }]\n        });\n        setTimeout(() => {\n          notif.dismiss();\n        }, 5000);\n        return;\n      }\n\n      this.getEditor(textEditor);\n    }), workspace.getCenter().observeActivePaneItem(paneItem => {\n      this.editors.forEach(editor => {\n        if (editor.textEditor !== paneItem) {\n          editor.removeTooltip();\n        }\n      });\n    }));\n  }\n\n  isFirstRender(): boolean {\n    return this.firstRender;\n  }\n\n  update({\n    messages,\n    added,\n    removed\n  }: MessagesPatch) {\n    this.messages = messages;\n    this.firstRender = false;\n    const {\n      editorsMap,\n      filePaths\n    } = getEditorsMap(this);\n    added.forEach(function (message) {\n      if (!message || !message.location) {\n        return;\n      }\n\n      const filePath = $file(message);\n\n      if (typeof filePath === 'string' && editorsMap.has(filePath)) {\n        editorsMap.get(filePath)!.added.push(message);\n      }\n    });\n    removed.forEach(function (message) {\n      if (!message || !message.location) {\n        return;\n      }\n\n      const filePath = $file(message);\n\n      if (typeof filePath === 'string' && editorsMap.has(filePath)) {\n        editorsMap.get(filePath)!.removed.push(message);\n      }\n    });\n    filePaths.forEach(function (filePath) {\n      if (editorsMap.has(filePath)) {\n        const {\n          added,\n          removed,\n          editors\n        } = (editorsMap.get(filePath) as EditorsPatch);\n\n        if (added.length || removed.length) {\n          editors.forEach(editor => editor.applyChanges(added, removed));\n        }\n      }\n    });\n  }\n\n  getEditor(textEditor: TextEditor): Editor | void {\n    for (const entry of this.editors) {\n      if (entry.textEditor === textEditor) {\n        return entry;\n      }\n    }\n\n    const editor = new Editor(textEditor);\n    this.editors.add(editor);\n    editor.onDidDestroy(() => {\n      this.editors.delete(editor);\n    });\n    editor.subscriptions.add(textEditor.onDidChangePath(() => {\n      editor.dispose();\n      this.getEditor(textEditor);\n    }));\n    editor.subscriptions.add(textEditor.onDidChangeGrammar(() => {\n      editor.dispose();\n      this.getEditor(textEditor);\n    }));\n    editor.applyChanges(filterMessages(this.messages, textEditor.getPath()), []);\n    return editor;\n  }\n\n  dispose() {\n    for (const entry of this.editors) {\n      entry.dispose();\n    }\n\n    this.subscriptions.dispose();\n  }\n\n}","const {\n  project\n} = atom;\nimport Path from 'path';\nimport { $file } from '../helpers';\nimport type { LinterMessage } from '../types';\nimport type { TreeViewHighlight } from './index';\n\nfunction getChunks(filePath: string, projectPath: string): Array<string> {\n  const toReturn: Array<string> = [];\n  const chunks = filePath.split(Path.sep);\n\n  while (chunks.length) {\n    const currentPath = chunks.join(Path.sep);\n\n    if (currentPath) {\n      // This is required for when you open files outside of project window\n      // and the last entry is '' because unix paths start with /\n      toReturn.push(currentPath);\n\n      if (currentPath === projectPath) {\n        break;\n      }\n    }\n\n    chunks.pop();\n  }\n\n  return toReturn;\n}\n\nfunction getChunksByProjects(filePath: string, projectPaths: Array<string>): Array<string> {\n  const matchingProjectPath = projectPaths.find(p => filePath.startsWith(p));\n\n  if (matchingProjectPath === undefined) {\n    return [filePath];\n  }\n\n  return getChunks(filePath, matchingProjectPath);\n}\n\nfunction mergeChange(change: Record<string, TreeViewHighlight | undefined>, filePath: string, severity: string): void {\n  if (change[filePath] === undefined) {\n    change[filePath] = {\n      info: false,\n      error: false,\n      warning: false\n    };\n  }\n\n  change[filePath]![severity] = true;\n}\n\nexport function calculateDecorations(decorateOnTreeView: 'Files and Directories' | 'Files' | undefined, messages: Array<LinterMessage>): Record<string, TreeViewHighlight | undefined> {\n  const toReturn: Record<string, TreeViewHighlight | undefined> = {};\n  const projectPaths: Array<string> = project.getPaths();\n  messages.forEach(function (message) {\n    const filePath = $file(message);\n\n    if (typeof filePath === 'string') {\n      const chunks = decorateOnTreeView === 'Files' ? [filePath] : getChunksByProjects(filePath, projectPaths);\n      chunks.forEach(chunk => mergeChange(toReturn, chunk, message.severity));\n    }\n  });\n  return toReturn;\n}","import { CompositeDisposable } from 'atom';\nconst {\n  config\n} = atom;\nimport Panel from './panel';\nimport Commands from './commands';\nimport StatusBar from './status-bar';\nimport BusySignal from './busy-signal';\nimport Intentions from './intentions';\nimport type { Linter, LinterMessage, MessagesPatch } from './types';\nimport Editors from './editors';\nimport TreeView from './tree-view';\nexport default class LinterUI {\n  name: string = 'Linter';\n  panel?: Panel;\n  signal: BusySignal = new BusySignal();\n  editors: Editors | null | undefined;\n  treeview?: TreeView;\n  commands: Commands = new Commands();\n  messages: Array<LinterMessage> = [];\n  statusBar: StatusBar = new StatusBar();\n  intentions: Intentions = new Intentions();\n  subscriptions: CompositeDisposable = new CompositeDisposable();\n  idleCallbacks: Set<number> = new Set();\n\n  constructor() {\n    this.subscriptions.add(this.signal, this.commands, this.statusBar);\n    const obsShowPanelCB = window.requestIdleCallback(\n    /* observeShowPanel */\n    async () => {\n      this.idleCallbacks.delete(obsShowPanelCB);\n      this.panel = new Panel();\n      await this.panel.update(this.messages);\n    });\n    this.idleCallbacks.add(obsShowPanelCB);\n    const obsShowDecorationsCB = window.requestIdleCallback(\n    /* observeShowDecorations */\n    () => {\n      this.idleCallbacks.delete(obsShowDecorationsCB);\n      this.subscriptions.add(config.observe('linter-ui-default.showDecorations', (showDecorations: boolean) => {\n        if (showDecorations && !this.editors) {\n          this.editors = new Editors();\n          this.editors.update({\n            added: this.messages,\n            removed: [],\n            messages: this.messages\n          });\n        } else if (!showDecorations && this.editors) {\n          this.editors.dispose();\n          this.editors = null;\n        }\n      }));\n    });\n    this.idleCallbacks.add(obsShowDecorationsCB);\n  }\n\n  async render(difference: MessagesPatch) {\n    const editors = this.editors;\n    this.messages = difference.messages;\n\n    if (editors) {\n      if (editors.isFirstRender()) {\n        editors.update({\n          added: difference.messages,\n          removed: [],\n          messages: difference.messages\n        });\n      } else {\n        editors.update(difference);\n      }\n    } // Initialize the TreeView subscription if necessary\n\n\n    if (!this.treeview) {\n      this.treeview = new TreeView();\n      this.subscriptions.add(this.treeview);\n    }\n\n    this.treeview.update(difference.messages);\n\n    if (this.panel) {\n      await this.panel.update(difference.messages);\n    }\n\n    this.commands.update(difference.messages);\n    this.intentions.update(difference.messages);\n    this.statusBar.update(difference.messages);\n  }\n\n  didBeginLinting(linter: Linter, filePath: string) {\n    this.signal.didBeginLinting(linter, filePath);\n  }\n\n  didFinishLinting(linter: Linter, filePath: string) {\n    this.signal.didFinishLinting(linter, filePath);\n  }\n\n  dispose() {\n    this.idleCallbacks.forEach(callbackID => window.cancelIdleCallback(callbackID));\n    this.idleCallbacks.clear();\n    this.subscriptions.dispose();\n\n    if (this.panel) {\n      this.panel.dispose();\n    }\n\n    if (this.editors) {\n      this.editors.dispose();\n    }\n  }\n\n}"],"names":["$range","message","location","position","$file","file","getPathOfMessage","project","relativizePath","filterMessages","messages","filePath","severity","filtered","forEach","push","filterMessagesByRangeOrPoint","rangeOrPoint","expectedRange","constructor","name","Range","fromObject","range","intersectsWith","openFile","options","searchAllPanes","initialLine","row","initialColumn","column","workspace","open","visitMessage","reference","messageFile","messagePosition","console","warn","messageRange","start","openExternally","version","undefined","url","shell","openExternal","sortMessages","rows","sortDirection","sortDirectionID","multiplyWith","sort","a","b","severityA","severityScore","severityB","sortValue","localeCompare","fileA","fileALength","length","fileB","fileBLength","rangeA","rangeB","sortSolutions","solutions","priority","applySolution","textEditor","solution","apply","replaceWith","currentText","textInRange","getTextInBufferRange","setTextInBufferRange","get","map","key","calculate","cachedValue","calculatedValue","set","debounce","func","wait","timeoutId","args","clearTimeout","setTimeout","$839611dd9a7bf80c$var$setHydrateContext","context","$839611dd9a7bf80c$export$f07a6cef19e11b4c","$839611dd9a7bf80c$export$ac5ee418fd4e0f60","fn","detachedOwner","$839611dd9a7bf80c$var$Owner","listener","$839611dd9a7bf80c$var$Listener","owner","root","$839611dd9a7bf80c$var$UNOWNED","owned","cleanups","attached","result","$839611dd9a7bf80c$var$runUpdates","$839611dd9a7bf80c$var$cleanNode","$839611dd9a7bf80c$export$248155459a28d1fc","value","areEqual","s","observers","observerSlots","pending","$839611dd9a7bf80c$var$NOTPENDING","comparator","$839611dd9a7bf80c$export$5ca47aaad2fbf622","$839611dd9a7bf80c$var$readSignal","bind","$839611dd9a7bf80c$var$writeSignal","$839611dd9a7bf80c$export$494c6b131fbef4be","$839611dd9a7bf80c$var$updateComputation","$839611dd9a7bf80c$var$createComputation","$839611dd9a7bf80c$export$c583671cbbdb1ca1","$839611dd9a7bf80c$var$runEffects","$839611dd9a7bf80c$var$runUserEffects","c","user","$839611dd9a7bf80c$var$Effects","$839611dd9a7bf80c$export$59ca756e7a8aea0e","state","$839611dd9a7bf80c$export$410f60d5e45e709","$839611dd9a7bf80c$var$Pending","q","i","data","call","$839611dd9a7bf80c$export$e047e338db8faf8c","$839611dd9a7bf80c$export$c9908675c437f062","this","sources","updates","$839611dd9a7bf80c$var$Updates","$839611dd9a7bf80c$var$lookDownstream","sSlot","sourceSlots","$839611dd9a7bf80c$var$Transition","running","has","tValue","isComp","add","o","disposed","$839611dd9a7bf80c$var$markUpstream","pure","Error","node","time","$839611dd9a7bf80c$var$ExecCount","$839611dd9a7bf80c$var$runComputation","nextValue","err","$839611dd9a7bf80c$var$handleError","updatedAt","init","tOwned","$839611dd9a7bf80c$var$runTop","top","suspense","inFallback","effects","runningTransition","$839611dd9a7bf80c$var$runQueue","cbs","promises","size","$839611dd9a7bf80c$var$setTransPending","cb","v","len","$839611dd9a7bf80c$var$completeUpdates","queue","userLength","e","resume","source","pop","index","obs","n","$839611dd9a7bf80c$var$reset","fns","$839611dd9a7bf80c$var$ERROR","$839611dd9a7bf80c$var$lookup","f","$839611dd9a7bf80c$export$ff2d44480da105c7","Comp","props","id","count","r","$839611dd9a7bf80c$export$f5235b51f4f3e06","list","mapFn","items","mapped","disposers","indexes","ctx","mapper","disposer","j","newItems","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","end","newEnd","item","newLen","fallback","$839611dd9a7bf80c$var$FALLBACK","Array","Math","min","Map","slice","$839611dd9a7bf80c$export$eaeb808a925192ab","each","children","[object Object]","$839611dd9a7bf80c$export$7e22de6427aba374","strictEqual","condition","when","child","$73d2f4acd52fe58a$var$reconcileArrays","parentNode","bLength","aEnd","bEnd","aStart","bStart","after","nextSibling","insertBefore","removeChild","t","sequence","replaceChild","$73d2f4acd52fe58a$export$792a797b69be0d58","code","element","dispose","$73d2f4acd52fe58a$export$ad79fd18084743b4","firstChild","textContent","$73d2f4acd52fe58a$export$c32ae21812be6bdb","html","check","isSVG","document","createElement","innerHTML","split","content","$73d2f4acd52fe58a$export$17a8087eb00e42f7","eventNames","$73d2f4acd52fe58a$var$$$EVENTS","Set","l","addEventListener","$73d2f4acd52fe58a$var$eventHandler","$73d2f4acd52fe58a$export$c8cd4918fc6460d5","removeAttribute","setAttribute","$73d2f4acd52fe58a$export$147b053ed05e69e8","handler","delegate","isArray","parent","accessor","marker","initial","$73d2f4acd52fe58a$var$insertExpression","current","type","composedPath","target","Object","defineProperty","configurable","cancelBubble","host","Node","unwrapArray","multi","nodeType","createTextNode","$73d2f4acd52fe58a$var$cleanChildren","array","$73d2f4acd52fe58a$var$normalizeIncomingArray","$73d2f4acd52fe58a$var$appendNodes","appendChild","normalized","unwrap","dynamic","replacement","inserted","el","isParent","$0a281cb1da6babf3$export$cbb2ce71cc733b5d","D","defaultSortDirection","R","C","S","p","rowSorter","$0a281cb1da6babf3$var$_","headerRenderer","x","$0a281cb1da6babf3$var$$","bodyRenderer","O","$0a281cb1da6babf3$var$w","getRowID","A","$0a281cb1da6babf3$var$k","accessors","I","columns","o1","keys","r1","t1","representitiveRowNumber","$0a281cb1da6babf3$var$v","cloneNode","c1","n1","sortable","$0a281cb1da6babf3$var$f","t2","t3","n2","e1","o2","shiftKey","className","$0a281cb1da6babf3$var$N","$0a281cb1da6babf3$var$g","$0a281cb1da6babf3$var$y","$0a281cb1da6babf3$var$m","String","r2","$0a281cb1da6babf3$var$b","$0a281cb1da6babf3$var$h","onClick","style","_v$","_v$2","prev","nodeStyle","cssText","removeProperty","setProperty","$73d2f4acd52fe58a$export$12da13d4956dfb58","$0a281cb1da6babf3$var$S","JSON","stringify","label","reverse","PanelComponent","getMessages","setMessages","createSignal","filteredMessages","onMount","onDidChangeMessages","panelRepresents","_el$","$8c855ba4badcb137$var$_tmpl$","width","excerpt","_el$2","$8c855ba4badcb137$var$_tmpl$2","severityNames","tagName","process","platform","metaKey","ctrlKey","getPaneContainer","paneContainer","paneContainerForItem","render","getElement","icon","classList","getDescription","setDescription","getShowDescription","setShowDescription","createEffect","async","description","log","marked","parcelRequire","default","renderMarkdown","response","error","onShouldUpdate","onShouldExpand","onShouldCollapse","$8695b732d08ffd7f$var$_tmpl$6","_el$6","_el$7","_el$8","$$click","thisOpenFile","_el$3","$8695b732d08ffd7f$var$_tmpl$","_el$4","messageSolutions","canBeFixed","_el$5","$8695b732d08ffd7f$var$_tmpl$2","called","getActiveTextEditor","onFixClick","once","showProviderName","linterName","_el$9","$8695b732d08ffd7f$var$_tmpl$3","_el$10","$8695b732d08ffd7f$var$_tmpl$4","_el$11","$8695b732d08ffd7f$var$_tmpl$5","ev","HTMLElement","href","elementGiven","contains","HTMLAnchorElement","parentElement","findHref","protocol","hostname","query","parseInt","overlayFocusFix","editor","editorComponent","atom","views","getView","getComponent","blurEditor","focusEditor","didFocus","didBlurHiddenInput","relatedTarget","copyListener","event","preventDefault","_document$getSelectio","_document$getSelectio2","text","getSelection","navigator","clipboard","writeText","TooltipElement","$7f8ac5dd24a631be$var$_tmpl$","$8695b732d08ffd7f$export$9099ad97b570f7c","threashold","getLineCount","handleDecoration","highlights","update","decoration","querySelector","warning","info","removeDecoration","remove","activate","config","packages","getLoadedPackage","metadata","callbackID","window","requestIdleCallback","idleCallbacks","delete","isPackageLoaded","$iGtxp$atompackagedeps","install","notifications","addInfo","enablePackage","package_deps","deactivate","cancelIdleCallback","clear","entry","instances","provideUI","instance","LinterUI","signalRegistry","signal","attach","provideIntentions","from","intentions","consumeSignal","signalService","consumeStatusBar","statusBarService","statusBarRegistry","statusBar","DOCK_ALLOWED_LOCATIONS","PanelDelegate","emitter","Emitter","subscriptions","CompositeDisposable","changeSubscription","observe","notInitial","getCenter","observeActivePaneItem","oldRow","onDidChangeCursorPosition","newBufferPosition","Disposable","getFilteredMessages","activeEditor","getPath","activeLine","getCursors","getBufferRow","Infinity","emit","callback","on","$839611dd9a7bf80c$var$transPending","Symbol","defaultValue","$839611dd9a7bf80c$export$a4ff86cea5c8127e","PanelDock","panelHeight","alwaysTakeMinimumSpace","changed","doPanelResize","$8c855ba4badcb137$export$6dd1a7910f0af0bb","forConfigHeight","minimumHeight","paneContainerView","dockNamesElement","dockNamesRects","getClientRects","tableElement","panelRects","height","updateConfigHeight","heightSet","lastSetPaneHeight","getURI","getTitle","getDefaultLocation","getAllowedLocations","getPreferredHeight","paneForItem","destroyItem","Panel","panel","Delegate","deactivating","showPanelConfig","hidePanelWhenEmpty","showPanelStateMessages","initialized","refresh","onDidDestroyPane","pane","destroyedPane","getItems","includes","onDidDestroyPaneItem","paneItem","showPanel","activationTimer","firstTime","dock","getBottomDock","onDidChangeActivePaneItem","getPanelLocation","onDidChangeVisible","visible","getActivePaneItem","activatePane","activateItem","newMessages","isActivePanel","hide","show","commands","Commands","move","applyAllSolutions","selection","write","invariant","forward","globally","currentEditor","currentFile","NaN","expectedValue","currentPosition","getCursorBufferPosition","found","currentFileEncountered","compare","tooltips","Element","itemErrors","Helpers","itemWarnings","itemInfos","title","onclick","setVisibility","prefix","visibility","countErrors","countWarnings","countInfos","childNodes","onDidClick","StatusBar","statusBarRepresents","statusBarClickBehavior","showStatusBar","isTextEditor","workspaceView","dispatch","postfix","currentTextEditor","currentPath","statusBarPosition","destroy","BusySignal","executing","providerTitles","useBusySignal","registry","provider","create","fileMap","currentTitles","linter","names","path","getExecuting","didBeginLinting","didFinishLinting","Intentions","getIntentions","bufferPosition","hasArrayFixes","containsPoint","concat","selected","grammarScopes","TooltipDelegate","expanded","shouldUpdate","originalEvent","isTrusted","body","eventListener","removeEventListener","passive","module","exports","Promise","resolve","require","then","overlayElement","focusFix","userSelect","Tooltip","markBufferRange","onDidDestroy","makeOverlaySelectable","decorateMarker","$7f8ac5dd24a631be$var$TooltipElement","hight","getBoundingClientRect","lineHight","getLineHeightInPixels","getFirstVisibleScreenRow","overlay","transform","dataTip","clientHeight","isValid","Editor","gutter","tooltip","markers","showTooltip","cursorPosition","tooltipFollows","ignoreTooltipInvocation","currentLineMarker","lastCursorPositions","WeakMap","tooltipSubscription","showDecorations","updateGutter","gutterPosition","removeTooltip","listenForMouseMovement","listenForKeyboardMovement","cursor","lastBufferPosition","isEqual","getBuffer","onDidChangeText","cursors","getBufferPosition","listenForCurrentLine","observeCursors","handlePositionChange","ref","currentRange","linesRange","currentIsEmpty","isEmpty","lastRange","lastIsEmpty","markScreenRange","invalidate","class","cursorMarker","getMarker","onDidChange","newHeadScreenPosition","newTailScreenPosition","getScreenRange","editorElement","disposableEvent","givenElement","selector","matches","nodeName","hasParent","tooltipElement","screenPosition","pixelPosition","pixelPositionForMouseEvent","expectedPixelPosition","pixelPositionForScreenPosition","differenceTop","differenceLeft","left","editorLineHeight","offsetHeight","offsetWidth","mouseEventNearPosition","getStartScreenPosition","screenPositionForPixelPosition","Number","isNaN","bufferPositionForScreenPosition","getBufferPositionFromMouseEvent","updateTooltip","removeGutter","addGutter","_","tooltipMarker","saveMarker","applyChanges","added","removed","textBuffer","destroyMarker","markerRange","markRange","oldHeadPosition","newHeadPosition","previousEventState","paint","allMarkers","largeness","lineCount","$187677c7139ef4d2$var$lineCountIfLarge","largeLineCount","longLine","$187677c7139ef4d2$var$lineLengthIfLong","longLineLength","Editors","editors","firstRender","observeTextEditors","notif","addWarning","detail","dismissable","buttons","getEditor","dismiss","querySelectorAll","scrollIntoView","isFirstRender","editorsMap","filePaths","getEditorsMap","onDidChangePath","onDidChangeGrammar","TreeView","decorations","decorateOnTreeView","givenMessages","applyDecorations","toReturn","projectPaths","getPaths","matchingProjectPath","find","startsWith","projectPath","chunks","Path","sep","join","getChunks","getChunksByProjects","chunk","change","mergeChange","calculateDecorations","treeViewElement","elementCache","appliedDecorations","getElementByPath","filePathsNew","CSS","escape","obsShowPanelCB","obsShowDecorationsCB","difference","treeview"],"version":3,"file":"index.js.map"}